package com.google.android.gms.internal.mlkit_vision_common;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;
/* loaded from: classes2.dex */
final class zzdr implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzdr zza = new zzdr();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzad zzadVar = new zzad();
        zzadVar.zza(1);
        zzb = builder.withProperty(zzadVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzad zzadVar2 = new zzad();
        zzadVar2.zza(2);
        zzc = builder2.withProperty(zzadVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzad zzadVar3 = new zzad();
        zzadVar3.zza(37);
        zzd = builder3.withProperty(zzadVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzad zzadVar4 = new zzad();
        zzadVar4.zza(61);
        zze = builder4.withProperty(zzadVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzad zzadVar5 = new zzad();
        zzadVar5.zza(3);
        zzf = builder5.withProperty(zzadVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzad zzadVar6 = new zzad();
        zzadVar6.zza(20);
        zzg = builder6.withProperty(zzadVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzad zzadVar7 = new zzad();
        zzadVar7.zza(4);
        zzh = builder7.withProperty(zzadVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzad zzadVar8 = new zzad();
        zzadVar8.zza(29);
        zzi = builder8.withProperty(zzadVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzad zzadVar9 = new zzad();
        zzadVar9.zza(5);
        zzj = builder9.withProperty(zzadVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzad zzadVar10 = new zzad();
        zzadVar10.zza(59);
        zzk = builder10.withProperty(zzadVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzad zzadVar11 = new zzad();
        zzadVar11.zza(6);
        zzl = builder11.withProperty(zzadVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzad zzadVar12 = new zzad();
        zzadVar12.zza(7);
        zzm = builder12.withProperty(zzadVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzad zzadVar13 = new zzad();
        zzadVar13.zza(58);
        zzn = builder13.withProperty(zzadVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzad zzadVar14 = new zzad();
        zzadVar14.zza(48);
        zzo = builder14.withProperty(zzadVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzad zzadVar15 = new zzad();
        zzadVar15.zza(49);
        zzp = builder15.withProperty(zzadVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzad zzadVar16 = new zzad();
        zzadVar16.zza(18);
        zzq = builder16.withProperty(zzadVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzad zzadVar17 = new zzad();
        zzadVar17.zza(26);
        zzr = builder17.withProperty(zzadVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzad zzadVar18 = new zzad();
        zzadVar18.zza(27);
        zzs = builder18.withProperty(zzadVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzad zzadVar19 = new zzad();
        zzadVar19.zza(28);
        zzt = builder19.withProperty(zzadVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzad zzadVar20 = new zzad();
        zzadVar20.zza(44);
        zzu = builder20.withProperty(zzadVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzad zzadVar21 = new zzad();
        zzadVar21.zza(45);
        zzv = builder21.withProperty(zzadVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzad zzadVar22 = new zzad();
        zzadVar22.zza(19);
        zzw = builder22.withProperty(zzadVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzad zzadVar23 = new zzad();
        zzadVar23.zza(21);
        zzx = builder23.withProperty(zzadVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzad zzadVar24 = new zzad();
        zzadVar24.zza(22);
        zzy = builder24.withProperty(zzadVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzad zzadVar25 = new zzad();
        zzadVar25.zza(8);
        zzz = builder25.withProperty(zzadVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzad zzadVar26 = new zzad();
        zzadVar26.zza(9);
        zzA = builder26.withProperty(zzadVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzad zzadVar27 = new zzad();
        zzadVar27.zza(10);
        zzB = builder27.withProperty(zzadVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzad zzadVar28 = new zzad();
        zzadVar28.zza(11);
        zzC = builder28.withProperty(zzadVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzad zzadVar29 = new zzad();
        zzadVar29.zza(12);
        zzD = builder29.withProperty(zzadVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzad zzadVar30 = new zzad();
        zzadVar30.zza(13);
        zzE = builder30.withProperty(zzadVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzad zzadVar31 = new zzad();
        zzadVar31.zza(14);
        zzF = builder31.withProperty(zzadVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzad zzadVar32 = new zzad();
        zzadVar32.zza(15);
        zzG = builder32.withProperty(zzadVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzad zzadVar33 = new zzad();
        zzadVar33.zza(16);
        zzH = builder33.withProperty(zzadVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzad zzadVar34 = new zzad();
        zzadVar34.zza(17);
        zzI = builder34.withProperty(zzadVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzad zzadVar35 = new zzad();
        zzadVar35.zza(23);
        zzJ = builder35.withProperty(zzadVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzad zzadVar36 = new zzad();
        zzadVar36.zza(24);
        zzK = builder36.withProperty(zzadVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzad zzadVar37 = new zzad();
        zzadVar37.zza(25);
        zzL = builder37.withProperty(zzadVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzad zzadVar38 = new zzad();
        zzadVar38.zza(39);
        zzM = builder38.withProperty(zzadVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("deleteModelLogEvent");
        zzad zzadVar39 = new zzad();
        zzadVar39.zza(40);
        zzN = builder39.withProperty(zzadVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzad zzadVar40 = new zzad();
        zzadVar40.zza(30);
        zzO = builder40.withProperty(zzadVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzad zzadVar41 = new zzad();
        zzadVar41.zza(31);
        zzP = builder41.withProperty(zzadVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzad zzadVar42 = new zzad();
        zzadVar42.zza(32);
        zzQ = builder42.withProperty(zzadVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzad zzadVar43 = new zzad();
        zzadVar43.zza(33);
        zzR = builder43.withProperty(zzadVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzad zzadVar44 = new zzad();
        zzadVar44.zza(34);
        zzS = builder44.withProperty(zzadVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzad zzadVar45 = new zzad();
        zzadVar45.zza(35);
        zzT = builder45.withProperty(zzadVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzad zzadVar46 = new zzad();
        zzadVar46.zza(36);
        zzU = builder46.withProperty(zzadVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzad zzadVar47 = new zzad();
        zzadVar47.zza(46);
        zzV = builder47.withProperty(zzadVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzad zzadVar48 = new zzad();
        zzadVar48.zza(47);
        zzW = builder48.withProperty(zzadVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzad zzadVar49 = new zzad();
        zzadVar49.zza(69);
        zzX = builder49.withProperty(zzadVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzad zzadVar50 = new zzad();
        zzadVar50.zza(42);
        zzY = builder50.withProperty(zzadVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzad zzadVar51 = new zzad();
        zzadVar51.zza(50);
        zzZ = builder51.withProperty(zzadVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("leakedHandleEvent");
        zzad zzadVar52 = new zzad();
        zzadVar52.zza(51);
        zzaa = builder52.withProperty(zzadVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzad zzadVar53 = new zzad();
        zzadVar53.zza(52);
        zzab = builder53.withProperty(zzadVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzad zzadVar54 = new zzad();
        zzadVar54.zza(53);
        zzac = builder54.withProperty(zzadVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzad zzadVar55 = new zzad();
        zzadVar55.zza(54);
        zzad = builder55.withProperty(zzadVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzad zzadVar56 = new zzad();
        zzadVar56.zza(60);
        zzae = builder56.withProperty(zzadVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzad zzadVar57 = new zzad();
        zzadVar57.zza(55);
        zzaf = builder57.withProperty(zzadVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzad zzadVar58 = new zzad();
        zzadVar58.zza(56);
        zzag = builder58.withProperty(zzadVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzad zzadVar59 = new zzad();
        zzadVar59.zza(57);
        zzah = builder59.withProperty(zzadVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzad zzadVar60 = new zzad();
        zzadVar60.zza(62);
        zzai = builder60.withProperty(zzadVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzad zzadVar61 = new zzad();
        zzadVar61.zza(63);
        zzaj = builder61.withProperty(zzadVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzad zzadVar62 = new zzad();
        zzadVar62.zza(64);
        zzak = builder62.withProperty(zzadVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzad zzadVar63 = new zzad();
        zzadVar63.zza(65);
        zzal = builder63.withProperty(zzadVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzad zzadVar64 = new zzad();
        zzadVar64.zza(66);
        zzam = builder64.withProperty(zzadVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzad zzadVar65 = new zzad();
        zzadVar65.zza(67);
        zzan = builder65.withProperty(zzadVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzad zzadVar66 = new zzad();
        zzadVar66.zza(68);
        zzao = builder66.withProperty(zzadVar66.zzb()).build();
    }

    private zzdr() {
    }

    @Override // com.google.firebase.encoders.ObjectEncoder, com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zzhc zzhcVar = (zzhc) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zzhcVar.zzc());
        objectEncoderContext2.add(zzc, zzhcVar.zzb());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, (Object) null);
        objectEncoderContext2.add(zzf, (Object) null);
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, (Object) null);
        objectEncoderContext2.add(zzo, (Object) null);
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, (Object) null);
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, (Object) null);
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, zzhcVar.zza());
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
    }
}
