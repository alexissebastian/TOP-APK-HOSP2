package util.a.y.fd;

import android.text.TextUtils;
import android.view.ViewConfiguration;
import android.widget.ExpandableListView;
import androidx.core.view.InputDeviceCompat;
import androidx.fragment.app.FragmentTransaction;
import com.google.common.primitives.Shorts;
import io.jsonwebtoken.JwtParser;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import kotlin.text.Typography;
/* loaded from: classes4.dex */
class f implements Cloneable {

    /* renamed from: ʻ  reason: contains not printable characters */
    private static int f9323 = 0;

    /* renamed from: ʼ  reason: contains not printable characters */
    private static char[] f9324 = null;

    /* renamed from: ʽ  reason: contains not printable characters */
    private static long f9325 = 0;

    /* renamed from: ˊ  reason: contains not printable characters */
    private static final int[] f9326;

    /* renamed from: ˊॱ  reason: contains not printable characters */
    private static final long[] f9327;

    /* renamed from: ˋ  reason: contains not printable characters */
    private static final int[] f9328;

    /* renamed from: ˎ  reason: contains not printable characters */
    private static final int[] f9329;

    /* renamed from: ˏ  reason: contains not printable characters */
    private static final short[] f9330;

    /* renamed from: ॱ  reason: contains not printable characters */
    static final byte[] f9331;

    /* renamed from: ॱˊ  reason: contains not printable characters */
    private static int f9332 = 1;

    /* renamed from: ᐝ  reason: contains not printable characters */
    private long[] f9333;

    static {
        m7790();
        f9330 = new short[]{0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, Shorts.MAX_POWER_OF_TWO, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845};
        f9326 = new int[]{0, 1, 8, 9, 64, 65, 72, 73, 512, InputDeviceCompat.SOURCE_DPAD, 520, 521, 576, 577, 584, 585, 4096, FragmentTransaction.TRANSIT_FRAGMENT_OPEN, 4104, 4105, 4160, 4161, 4168, 4169, 4608, 4609, 4616, 4617, 4672, 4673, 4680, 4681, 32768, 32769, 32776, 32777, 32832, 32833, 32840, 32841, 33280, 33281, 33288, 33289, 33344, 33345, 33352, 33353, 36864, 36865, 36872, 36873, 36928, 36929, 36936, 36937, 37376, 37377, 37384, 37385, 37440, 37441, 37448, 37449, 262144, 262145, 262152, 262153, 262208, 262209, 262216, 262217, 262656, 262657, 262664, 262665, 262720, 262721, 262728, 262729, 266240, 266241, 266248, 266249, 266304, 266305, 266312, 266313, 266752, 266753, 266760, 266761, 266816, 266817, 266824, 266825, 294912, 294913, 294920, 294921, 294976, 294977, 294984, 294985, 295424, 295425, 295432, 295433, 295488, 295489, 295496, 295497, 299008, 299009, 299016, 299017, 299072, 299073, 299080, 299081, 299520, 299521, 299528, 299529, 299584, 299585, 299592, 299593};
        f9329 = new int[]{0, 1, 16, 17, 256, 257, 272, 273, 4096, FragmentTransaction.TRANSIT_FRAGMENT_OPEN, 4112, 4113, 4352, 4353, 4368, 4369, 65536, 65537, 65552, 65553, 65792, 65793, 65808, 65809, 69632, 69633, 69648, 69649, 69888, 69889, 69904, 69905, 1048576, 1048577, 1048592, 1048593, 1048832, 1048833, 1048848, 1048849, 1052672, 1052673, 1052688, 1052689, 1052928, 1052929, 1052944, 1052945, 1114112, 1114113, 1114128, 1114129, 1114368, 1114369, 1114384, 1114385, 1118208, 1118209, 1118224, 1118225, 1118464, 1118465, 1118480, 1118481, 16777216, 16777217, InputDeviceCompat.SOURCE_JOYSTICK, 16777233, 16777472, 16777473, 16777488, 16777489, 16781312, 16781313, 16781328, 16781329, 16781568, 16781569, 16781584, 16781585, 16842752, 16842753, 16842768, 16842769, 16843008, 16843009, 16843024, 16843025, 16846848, 16846849, 16846864, 16846865, 16847104, 16847105, 16847120, 16847121, 17825792, 17825793, 17825808, 17825809, 17826048, 17826049, 17826064, 17826065, 17829888, 17829889, 17829904, 17829905, 17830144, 17830145, 17830160, 17830161, 17891328, 17891329, 17891344, 17891345, 17891584, 17891585, 17891600, 17891601, 17895424, 17895425, 17895440, 17895441, 17895680, 17895681, 17895696, 17895697, 268435456, 268435457, 268435472, 268435473, 268435712, 268435713, 268435728, 268435729, 268439552, 268439553, 268439568, 268439569, 268439808, 268439809, 268439824, 268439825, 268500992, 268500993, 268501008, 268501009, 268501248, 268501249, 268501264, 268501265, 268505088, 268505089, 268505104, 268505105, 268505344, 268505345, 268505360, 268505361, 269484032, 269484033, 269484048, 269484049, 269484288, 269484289, 269484304, 269484305, 269488128, 269488129, 269488144, 269488145, 269488384, 269488385, 269488400, 269488401, 269549568, 269549569, 269549584, 269549585, 269549824, 269549825, 269549840, 269549841, 269553664, 269553665, 269553680, 269553681, 269553920, 269553921, 269553936, 269553937, 285212672, 285212673, 285212688, 285212689, 285212928, 285212929, 285212944, 285212945, 285216768, 285216769, 285216784, 285216785, 285217024, 285217025, 285217040, 285217041, 285278208, 285278209, 285278224, 285278225, 285278464, 285278465, 285278480, 285278481, 285282304, 285282305, 285282320, 285282321, 285282560, 285282561, 285282576, 285282577, 286261248, 286261249, 286261264, 286261265, 286261504, 286261505, 286261520, 286261521, 286265344, 286265345, 286265360, 286265361, 286265600, 286265601, 286265616, 286265617, 286326784, 286326785, 286326800, 286326801, 286327040, 286327041, 286327056, 286327057, 286330880, 286330881, 286330896, 286330897, 286331136, 286331137, 286331152, 286331153};
        f9328 = new int[]{0, 1, 32, 33, 1024, InputDeviceCompat.SOURCE_GAMEPAD, 1056, 1057, 32768, 32769, 32800, 32801, 33792, 33793, 33824, 33825, 1048576, 1048577, 1048608, 1048609, 1049600, 1049601, 1049632, 1049633, 1081344, 1081345, 1081376, 1081377, 1082368, 1082369, 1082400, 1082401, 33554432, InputDeviceCompat.SOURCE_HDMI, 33554464, 33554465, 33555456, 33555457, 33555488, 33555489, 33587200, 33587201, 33587232, 33587233, 33588224, 33588225, 33588256, 33588257, 34603008, 34603009, 34603040, 34603041, 34604032, 34604033, 34604064, 34604065, 34635776, 34635777, 34635808, 34635809, 34636800, 34636801, 34636832, 34636833, 1073741824, 1073741825, 1073741856, 1073741857, 1073742848, 1073742849, 1073742880, 1073742881, 1073774592, 1073774593, 1073774624, 1073774625, 1073775616, 1073775617, 1073775648, 1073775649, 1074790400, 1074790401, 1074790432, 1074790433, 1074791424, 1074791425, 1074791456, 1074791457, 1074823168, 1074823169, 1074823200, 1074823201, 1074824192, 1074824193, 1074824224, 1074824225, 1107296256, 1107296257, 1107296288, 1107296289, 1107297280, 1107297281, 1107297312, 1107297313, 1107329024, 1107329025, 1107329056, 1107329057, 1107330048, 1107330049, 1107330080, 1107330081, 1108344832, 1108344833, 1108344864, 1108344865, 1108345856, 1108345857, 1108345888, 1108345889, 1108377600, 1108377601, 1108377632, 1108377633, 1108378624, 1108378625, 1108378656, 1108378657};
        long[] jArr = new long[512];
        ByteBuffer.wrap("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0081\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000@\u0080\u0000\u0000\u0000\u0000\u0000\u0000@\u0081\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0001\u0000\u0000\u0000\u0000\u0000 \u0000\u0080\u0000\u0000\u0000\u0000\u0000 \u0000\u0081\u0000\u0000\u0000\u0000\u0000 @\u0000\u0000\u0000\u0000\u0000\u0000 @\u0001\u0000\u0000\u0000\u0000\u0000 @\u0080\u0000\u0000\u0000\u0000\u0000 @\u0081\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0080\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0081\u0000\u0000\u0000\u0000\u0010\u0000@\u0000\u0000\u0000\u0000\u0000\u0010\u0000@\u0001\u0000\u0000\u0000\u0000\u0010\u0000@\u0080\u0000\u0000\u0000\u0000\u0010\u0000@\u0081\u0000\u0000\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0010 \u0000\u0001\u0000\u0000\u0000\u0000\u0010 \u0000\u0080\u0000\u0000\u0000\u0000\u0010 \u0000\u0081\u0000\u0000\u0000\u0000\u0010 @\u0000\u0000\u0000\u0000\u0000\u0010 @\u0001\u0000\u0000\u0000\u0000\u0010 @\u0080\u0000\u0000\u0000\u0000\u0010 @\u0081\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0080\u0000\u0000\u0000\b\u0000\u0000\u0000\u0081\u0000\u0000\u0000\b\u0000\u0000@\u0000\u0000\u0000\u0000\b\u0000\u0000@\u0001\u0000\u0000\u0000\b\u0000\u0000@\u0080\u0000\u0000\u0000\b\u0000\u0000@\u0081\u0000\u0000\u0000\b\u0000 \u0000\u0000\u0000\u0000\u0000\b\u0000 \u0000\u0001\u0000\u0000\u0000\b\u0000 \u0000\u0080\u0000\u0000\u0000\b\u0000 \u0000\u0081\u0000\u0000\u0000\b\u0000 @\u0000\u0000\u0000\u0000\b\u0000 @\u0001\u0000\u0000\u0000\b\u0000 @\u0080\u0000\u0000\u0000\b\u0000 @\u0081\u0000\u0000\u0000\b\u0010\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010\u0000\u0000\u0001\u0000\u0000\u0000\b\u0010\u0000\u0000\u0080\u0000\u0000\u0000\b\u0010\u0000\u0000\u0081\u0000\u0000\u0000\b\u0010\u0000@\u0000\u0000\u0000\u0000\b\u0010\u0000@\u0001\u0000\u0000\u0000\b\u0010\u0000@\u0080\u0000\u0000\u0000\b\u0010\u0000@\u0081\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0001\u0000\u0000\u0000\b\u0010 \u0000\u0080\u0000\u0000\u0000\b\u0010 \u0000\u0081\u0000\u0000\u0000\b\u0010 @\u0000\u0000\u0000\u0000\b\u0010 @\u0001\u0000\u0000\u0000\b\u0010 @\u0080\u0000\u0000\u0000\b\u0010 @\u0081\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0080\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0081\u0000\u0000\u0004\u0000\u0000\u0000@\u0000\u0000\u0000\u0004\u0000\u0000\u0000@\u0001\u0000\u0000\u0004\u0000\u0000\u0000@\u0080\u0000\u0000\u0004\u0000\u0000\u0000@\u0081\u0000\u0000\u0004\u0000\u0000 \u0000\u0000\u0000\u0000\u0004\u0000\u0000 \u0000\u0001\u0000\u0000\u0004\u0000\u0000 \u0000\u0080\u0000\u0000\u0004\u0000\u0000 \u0000\u0081\u0000\u0000\u0004\u0000\u0000 @\u0000\u0000\u0000\u0004\u0000\u0000 @\u0001\u0000\u0000\u0004\u0000\u0000 @\u0080\u0000\u0000\u0004\u0000\u0000 @\u0081\u0000\u0000\u0004\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0010\u0000\u0000\u0080\u0000\u0000\u0004\u0000\u0010\u0000\u0000\u0081\u0000\u0000\u0004\u0000\u0010\u0000@\u0000\u0000\u0000\u0004\u0000\u0010\u0000@\u0001\u0000\u0000\u0004\u0000\u0010\u0000@\u0080\u0000\u0000\u0004\u0000\u0010\u0000@\u0081\u0000\u0000\u0004\u0000\u0010 \u0000\u0000\u0000\u0000\u0004\u0000\u0010 \u0000\u0001\u0000\u0000\u0004\u0000\u0010 \u0000\u0080\u0000\u0000\u0004\u0000\u0010 \u0000\u0081\u0000\u0000\u0004\u0000\u0010 @\u0000\u0000\u0000\u0004\u0000\u0010 @\u0001\u0000\u0000\u0004\u0000\u0010 @\u0080\u0000\u0000\u0004\u0000\u0010 @\u0081\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0001\u0000\u0000\u0004\b\u0000\u0000\u0000\u0080\u0000\u0000\u0004\b\u0000\u0000\u0000\u0081\u0000\u0000\u0004\b\u0000\u0000@\u0000\u0000\u0000\u0004\b\u0000\u0000@\u0001\u0000\u0000\u0004\b\u0000\u0000@\u0080\u0000\u0000\u0004\b\u0000\u0000@\u0081\u0000\u0000\u0004\b\u0000 \u0000\u0000\u0000\u0000\u0004\b\u0000 \u0000\u0001\u0000\u0000\u0004\b\u0000 \u0000\u0080\u0000\u0000\u0004\b\u0000 \u0000\u0081\u0000\u0000\u0004\b\u0000 @\u0000\u0000\u0000\u0004\b\u0000 @\u0001\u0000\u0000\u0004\b\u0000 @\u0080\u0000\u0000\u0004\b\u0000 @\u0081\u0000\u0000\u0004\b\u0010\u0000\u0000\u0000\u0000\u0000\u0004\b\u0010\u0000\u0000\u0001\u0000\u0000\u0004\b\u0010\u0000\u0000\u0080\u0000\u0000\u0004\b\u0010\u0000\u0000\u0081\u0000\u0000\u0004\b\u0010\u0000@\u0000\u0000\u0000\u0004\b\u0010\u0000@\u0001\u0000\u0000\u0004\b\u0010\u0000@\u0080\u0000\u0000\u0004\b\u0010\u0000@\u0081\u0000\u0000\u0004\b\u0010 \u0000\u0000\u0000\u0000\u0004\b\u0010 \u0000\u0001\u0000\u0000\u0004\b\u0010 \u0000\u0080\u0000\u0000\u0004\b\u0010 \u0000\u0081\u0000\u0000\u0004\b\u0010 @\u0000\u0000\u0000\u0004\b\u0010 @\u0001\u0000\u0000\u0004\b\u0010 @\u0080\u0000\u0000\u0004\b\u0010 @\u0081\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0080\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0081\u0000\u0002\u0000\u0000\u0000\u0000@\u0000\u0000\u0002\u0000\u0000\u0000\u0000@\u0001\u0000\u0002\u0000\u0000\u0000\u0000@\u0080\u0000\u0002\u0000\u0000\u0000\u0000@\u0081\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0001\u0000\u0002\u0000\u0000\u0000 \u0000\u0080\u0000\u0002\u0000\u0000\u0000 \u0000\u0081\u0000\u0002\u0000\u0000\u0000 @\u0000\u0000\u0002\u0000\u0000\u0000 @\u0001\u0000\u0002\u0000\u0000\u0000 @\u0080\u0000\u0002\u0000\u0000\u0000 @\u0081\u0000\u0002\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0010\u0000\u0000\u0080\u0000\u0002\u0000\u0000\u0010\u0000\u0000\u0081\u0000\u0002\u0000\u0000\u0010\u0000@\u0000\u0000\u0002\u0000\u0000\u0010\u0000@\u0001\u0000\u0002\u0000\u0000\u0010\u0000@\u0080\u0000\u0002\u0000\u0000\u0010\u0000@\u0081\u0000\u0002\u0000\u0000\u0010 \u0000\u0000\u0000\u0002\u0000\u0000\u0010 \u0000\u0001\u0000\u0002\u0000\u0000\u0010 \u0000\u0080\u0000\u0002\u0000\u0000\u0010 \u0000\u0081\u0000\u0002\u0000\u0000\u0010 @\u0000\u0000\u0002\u0000\u0000\u0010 @\u0001\u0000\u0002\u0000\u0000\u0010 @\u0080\u0000\u0002\u0000\u0000\u0010 @\u0081\u0000\u0002\u0000\b\u0000\u0000\u0000\u0000\u0000\u0002\u0000\b\u0000\u0000\u0000\u0001\u0000\u0002\u0000\b\u0000\u0000\u0000\u0080\u0000\u0002\u0000\b\u0000\u0000\u0000\u0081\u0000\u0002\u0000\b\u0000\u0000@\u0000\u0000\u0002\u0000\b\u0000\u0000@\u0001\u0000\u0002\u0000\b\u0000\u0000@\u0080\u0000\u0002\u0000\b\u0000\u0000@\u0081\u0000\u0002\u0000\b\u0000 \u0000\u0000\u0000\u0002\u0000\b\u0000 \u0000\u0001\u0000\u0002\u0000\b\u0000 \u0000\u0080\u0000\u0002\u0000\b\u0000 \u0000\u0081\u0000\u0002\u0000\b\u0000 @\u0000\u0000\u0002\u0000\b\u0000 @\u0001\u0000\u0002\u0000\b\u0000 @\u0080\u0000\u0002\u0000\b\u0000 @\u0081\u0000\u0002\u0000\b\u0010\u0000\u0000\u0000\u0000\u0002\u0000\b\u0010\u0000\u0000\u0001\u0000\u0002\u0000\b\u0010\u0000\u0000\u0080\u0000\u0002\u0000\b\u0010\u0000\u0000\u0081\u0000\u0002\u0000\b\u0010\u0000@\u0000\u0000\u0002\u0000\b\u0010\u0000@\u0001\u0000\u0002\u0000\b\u0010\u0000@\u0080\u0000\u0002\u0000\b\u0010\u0000@\u0081\u0000\u0002\u0000\b\u0010 \u0000\u0000\u0000\u0002\u0000\b\u0010 \u0000\u0001\u0000\u0002\u0000\b\u0010 \u0000\u0080\u0000\u0002\u0000\b\u0010 \u0000\u0081\u0000\u0002\u0000\b\u0010 @\u0000\u0000\u0002\u0000\b\u0010 @\u0001\u0000\u0002\u0000\b\u0010 @\u0080\u0000\u0002\u0000\b\u0010 @\u0081\u0000\u0002\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0004\u0000\u0000\u0000\u0000\u0080\u0000\u0002\u0004\u0000\u0000\u0000\u0000\u0081\u0000\u0002\u0004\u0000\u0000\u0000@\u0000\u0000\u0002\u0004\u0000\u0000\u0000@\u0001\u0000\u0002\u0004\u0000\u0000\u0000@\u0080\u0000\u0002\u0004\u0000\u0000\u0000@\u0081\u0000\u0002\u0004\u0000\u0000 \u0000\u0000\u0000\u0002\u0004\u0000\u0000 \u0000\u0001\u0000\u0002\u0004\u0000\u0000 \u0000\u0080\u0000\u0002\u0004\u0000\u0000 \u0000\u0081\u0000\u0002\u0004\u0000\u0000 @\u0000\u0000\u0002\u0004\u0000\u0000 @\u0001\u0000\u0002\u0004\u0000\u0000 @\u0080\u0000\u0002\u0004\u0000\u0000 @\u0081\u0000\u0002\u0004\u0000\u0010\u0000\u0000\u0000\u0000\u0002\u0004\u0000\u0010\u0000\u0000\u0001\u0000\u0002\u0004\u0000\u0010\u0000\u0000\u0080\u0000\u0002\u0004\u0000\u0010\u0000\u0000\u0081\u0000\u0002\u0004\u0000\u0010\u0000@\u0000\u0000\u0002\u0004\u0000\u0010\u0000@\u0001\u0000\u0002\u0004\u0000\u0010\u0000@\u0080\u0000\u0002\u0004\u0000\u0010\u0000@\u0081\u0000\u0002\u0004\u0000\u0010 \u0000\u0000\u0000\u0002\u0004\u0000\u0010 \u0000\u0001\u0000\u0002\u0004\u0000\u0010 \u0000\u0080\u0000\u0002\u0004\u0000\u0010 \u0000\u0081\u0000\u0002\u0004\u0000\u0010 @\u0000\u0000\u0002\u0004\u0000\u0010 @\u0001\u0000\u0002\u0004\u0000\u0010 @\u0080\u0000\u0002\u0004\u0000\u0010 @\u0081\u0000\u0002\u0004\b\u0000\u0000\u0000\u0000\u0000\u0002\u0004\b\u0000\u0000\u0000\u0001\u0000\u0002\u0004\b\u0000\u0000\u0000\u0080\u0000\u0002\u0004\b\u0000\u0000\u0000\u0081\u0000\u0002\u0004\b\u0000\u0000@\u0000\u0000\u0002\u0004\b\u0000\u0000@\u0001\u0000\u0002\u0004\b\u0000\u0000@\u0080\u0000\u0002\u0004\b\u0000\u0000@\u0081\u0000\u0002\u0004\b\u0000 \u0000\u0000\u0000\u0002\u0004\b\u0000 \u0000\u0001\u0000\u0002\u0004\b\u0000 \u0000\u0080\u0000\u0002\u0004\b\u0000 \u0000\u0081\u0000\u0002\u0004\b\u0000 @\u0000\u0000\u0002\u0004\b\u0000 @\u0001\u0000\u0002\u0004\b\u0000 @\u0080\u0000\u0002\u0004\b\u0000 @\u0081\u0000\u0002\u0004\b\u0010\u0000\u0000\u0000\u0000\u0002\u0004\b\u0010\u0000\u0000\u0001\u0000\u0002\u0004\b\u0010\u0000\u0000\u0080\u0000\u0002\u0004\b\u0010\u0000\u0000\u0081\u0000\u0002\u0004\b\u0010\u0000@\u0000\u0000\u0002\u0004\b\u0010\u0000@\u0001\u0000\u0002\u0004\b\u0010\u0000@\u0080\u0000\u0002\u0004\b\u0010\u0000@\u0081\u0000\u0002\u0004\b\u0010 \u0000\u0000\u0000\u0002\u0004\b\u0010 \u0000\u0001\u0000\u0002\u0004\b\u0010 \u0000\u0080\u0000\u0002\u0004\b\u0010 \u0000\u0081\u0000\u0002\u0004\b\u0010 @\u0000\u0000\u0002\u0004\b\u0010 @\u0001\u0000\u0002\u0004\b\u0010 @\u0080\u0000\u0002\u0004\b\u0010 @\u0081\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0080\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0081\u0001\u0000\u0000\u0000\u0000\u0000@\u0000\u0001\u0000\u0000\u0000\u0000\u0000@\u0001\u0001\u0000\u0000\u0000\u0000\u0000@\u0080\u0001\u0000\u0000\u0000\u0000\u0000@\u0081\u0001\u0000\u0000\u0000\u0000 \u0000\u0000\u0001\u0000\u0000\u0000\u0000 \u0000\u0001\u0001\u0000\u0000\u0000\u0000 \u0000\u0080\u0001\u0000\u0000\u0000\u0000 \u0000\u0081\u0001\u0000\u0000\u0000\u0000 @\u0000\u0001\u0000\u0000\u0000\u0000 @\u0001\u0001\u0000\u0000\u0000\u0000 @\u0080\u0001\u0000\u0000\u0000\u0000 @\u0081\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0080\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0081\u0001\u0000\u0000\u0000\u0010\u0000@\u0000\u0001\u0000\u0000\u0000\u0010\u0000@\u0001\u0001\u0000\u0000\u0000\u0010\u0000@\u0080\u0001\u0000\u0000\u0000\u0010\u0000@\u0081\u0001\u0000\u0000\u0000\u0010 \u0000\u0000\u0001\u0000\u0000\u0000\u0010 \u0000\u0001\u0001\u0000\u0000\u0000\u0010 \u0000\u0080\u0001\u0000\u0000\u0000\u0010 \u0000\u0081\u0001\u0000\u0000\u0000\u0010 @\u0000\u0001\u0000\u0000\u0000\u0010 @\u0001\u0001\u0000\u0000\u0000\u0010 @\u0080\u0001\u0000\u0000\u0000\u0010 @\u0081\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0001\u0000\u0000\b\u0000\u0000\u0000\u0080\u0001\u0000\u0000\b\u0000\u0000\u0000\u0081\u0001\u0000\u0000\b\u0000\u0000@\u0000\u0001\u0000\u0000\b\u0000\u0000@\u0001\u0001\u0000\u0000\b\u0000\u0000@\u0080\u0001\u0000\u0000\b\u0000\u0000@\u0081\u0001\u0000\u0000\b\u0000 \u0000\u0000\u0001\u0000\u0000\b\u0000 \u0000\u0001\u0001\u0000\u0000\b\u0000 \u0000\u0080\u0001\u0000\u0000\b\u0000 \u0000\u0081\u0001\u0000\u0000\b\u0000 @\u0000\u0001\u0000\u0000\b\u0000 @\u0001\u0001\u0000\u0000\b\u0000 @\u0080\u0001\u0000\u0000\b\u0000 @\u0081\u0001\u0000\u0000\b\u0010\u0000\u0000\u0000\u0001\u0000\u0000\b\u0010\u0000\u0000\u0001\u0001\u0000\u0000\b\u0010\u0000\u0000\u0080\u0001\u0000\u0000\b\u0010\u0000\u0000\u0081\u0001\u0000\u0000\b\u0010\u0000@\u0000\u0001\u0000\u0000\b\u0010\u0000@\u0001\u0001\u0000\u0000\b\u0010\u0000@\u0080\u0001\u0000\u0000\b\u0010\u0000@\u0081\u0001\u0000\u0000\b\u0010 \u0000\u0000\u0001\u0000\u0000\b\u0010 \u0000\u0001\u0001\u0000\u0000\b\u0010 \u0000\u0080\u0001\u0000\u0000\b\u0010 \u0000\u0081\u0001\u0000\u0000\b\u0010 @\u0000\u0001\u0000\u0000\b\u0010 @\u0001\u0001\u0000\u0000\b\u0010 @\u0080\u0001\u0000\u0000\b\u0010 @\u0081\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0080\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0081\u0001\u0000\u0004\u0000\u0000\u0000@\u0000\u0001\u0000\u0004\u0000\u0000\u0000@\u0001\u0001\u0000\u0004\u0000\u0000\u0000@\u0080\u0001\u0000\u0004\u0000\u0000\u0000@\u0081\u0001\u0000\u0004\u0000\u0000 \u0000\u0000\u0001\u0000\u0004\u0000\u0000 \u0000\u0001\u0001\u0000\u0004\u0000\u0000 \u0000\u0080\u0001\u0000\u0004\u0000\u0000 \u0000\u0081\u0001\u0000\u0004\u0000\u0000 @\u0000\u0001\u0000\u0004\u0000\u0000 @\u0001\u0001\u0000\u0004\u0000\u0000 @\u0080\u0001\u0000\u0004\u0000\u0000 @\u0081\u0001\u0000\u0004\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u0010\u0000\u0000\u0001\u0001\u0000\u0004\u0000\u0010\u0000\u0000\u0080\u0001\u0000\u0004\u0000\u0010\u0000\u0000\u0081\u0001\u0000\u0004\u0000\u0010\u0000@\u0000\u0001\u0000\u0004\u0000\u0010\u0000@\u0001\u0001\u0000\u0004\u0000\u0010\u0000@\u0080\u0001\u0000\u0004\u0000\u0010\u0000@\u0081\u0001\u0000\u0004\u0000\u0010 \u0000\u0000\u0001\u0000\u0004\u0000\u0010 \u0000\u0001\u0001\u0000\u0004\u0000\u0010 \u0000\u0080\u0001\u0000\u0004\u0000\u0010 \u0000\u0081\u0001\u0000\u0004\u0000\u0010 @\u0000\u0001\u0000\u0004\u0000\u0010 @\u0001\u0001\u0000\u0004\u0000\u0010 @\u0080\u0001\u0000\u0004\u0000\u0010 @\u0081\u0001\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0004\b\u0000\u0000\u0000\u0001\u0001\u0000\u0004\b\u0000\u0000\u0000\u0080\u0001\u0000\u0004\b\u0000\u0000\u0000\u0081\u0001\u0000\u0004\b\u0000\u0000@\u0000\u0001\u0000\u0004\b\u0000\u0000@\u0001\u0001\u0000\u0004\b\u0000\u0000@\u0080\u0001\u0000\u0004\b\u0000\u0000@\u0081\u0001\u0000\u0004\b\u0000 \u0000\u0000\u0001\u0000\u0004\b\u0000 \u0000\u0001\u0001\u0000\u0004\b\u0000 \u0000\u0080\u0001\u0000\u0004\b\u0000 \u0000\u0081\u0001\u0000\u0004\b\u0000 @\u0000\u0001\u0000\u0004\b\u0000 @\u0001\u0001\u0000\u0004\b\u0000 @\u0080\u0001\u0000\u0004\b\u0000 @\u0081\u0001\u0000\u0004\b\u0010\u0000\u0000\u0000\u0001\u0000\u0004\b\u0010\u0000\u0000\u0001\u0001\u0000\u0004\b\u0010\u0000\u0000\u0080\u0001\u0000\u0004\b\u0010\u0000\u0000\u0081\u0001\u0000\u0004\b\u0010\u0000@\u0000\u0001\u0000\u0004\b\u0010\u0000@\u0001\u0001\u0000\u0004\b\u0010\u0000@\u0080\u0001\u0000\u0004\b\u0010\u0000@\u0081\u0001\u0000\u0004\b\u0010 \u0000\u0000\u0001\u0000\u0004\b\u0010 \u0000\u0001\u0001\u0000\u0004\b\u0010 \u0000\u0080\u0001\u0000\u0004\b\u0010 \u0000\u0081\u0001\u0000\u0004\b\u0010 @\u0000\u0001\u0000\u0004\b\u0010 @\u0001\u0001\u0000\u0004\b\u0010 @\u0080\u0001\u0000\u0004\b\u0010 @\u0081\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0080\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0081\u0001\u0002\u0000\u0000\u0000\u0000@\u0000\u0001\u0002\u0000\u0000\u0000\u0000@\u0001\u0001\u0002\u0000\u0000\u0000\u0000@\u0080\u0001\u0002\u0000\u0000\u0000\u0000@\u0081\u0001\u0002\u0000\u0000\u0000 \u0000\u0000\u0001\u0002\u0000\u0000\u0000 \u0000\u0001\u0001\u0002\u0000\u0000\u0000 \u0000\u0080\u0001\u0002\u0000\u0000\u0000 \u0000\u0081\u0001\u0002\u0000\u0000\u0000 @\u0000\u0001\u0002\u0000\u0000\u0000 @\u0001\u0001\u0002\u0000\u0000\u0000 @\u0080\u0001\u0002\u0000\u0000\u0000 @\u0081\u0001\u0002\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0010\u0000\u0000\u0001\u0001\u0002\u0000\u0000\u0010\u0000\u0000\u0080\u0001\u0002\u0000\u0000\u0010\u0000\u0000\u0081\u0001\u0002\u0000\u0000\u0010\u0000@\u0000\u0001\u0002\u0000\u0000\u0010\u0000@\u0001\u0001\u0002\u0000\u0000\u0010\u0000@\u0080\u0001\u0002\u0000\u0000\u0010\u0000@\u0081\u0001\u0002\u0000\u0000\u0010 \u0000\u0000\u0001\u0002\u0000\u0000\u0010 \u0000\u0001\u0001\u0002\u0000\u0000\u0010 \u0000\u0080\u0001\u0002\u0000\u0000\u0010 \u0000\u0081\u0001\u0002\u0000\u0000\u0010 @\u0000\u0001\u0002\u0000\u0000\u0010 @\u0001\u0001\u0002\u0000\u0000\u0010 @\u0080\u0001\u0002\u0000\u0000\u0010 @\u0081\u0001\u0002\u0000\b\u0000\u0000\u0000\u0000\u0001\u0002\u0000\b\u0000\u0000\u0000\u0001\u0001\u0002\u0000\b\u0000\u0000\u0000\u0080\u0001\u0002\u0000\b\u0000\u0000\u0000\u0081\u0001\u0002\u0000\b\u0000\u0000@\u0000\u0001\u0002\u0000\b\u0000\u0000@\u0001\u0001\u0002\u0000\b\u0000\u0000@\u0080\u0001\u0002\u0000\b\u0000\u0000@\u0081\u0001\u0002\u0000\b\u0000 \u0000\u0000\u0001\u0002\u0000\b\u0000 \u0000\u0001\u0001\u0002\u0000\b\u0000 \u0000\u0080\u0001\u0002\u0000\b\u0000 \u0000\u0081\u0001\u0002\u0000\b\u0000 @\u0000\u0001\u0002\u0000\b\u0000 @\u0001\u0001\u0002\u0000\b\u0000 @\u0080\u0001\u0002\u0000\b\u0000 @\u0081\u0001\u0002\u0000\b\u0010\u0000\u0000\u0000\u0001\u0002\u0000\b\u0010\u0000\u0000\u0001\u0001\u0002\u0000\b\u0010\u0000\u0000\u0080\u0001\u0002\u0000\b\u0010\u0000\u0000\u0081\u0001\u0002\u0000\b\u0010\u0000@\u0000\u0001\u0002\u0000\b\u0010\u0000@\u0001\u0001\u0002\u0000\b\u0010\u0000@\u0080\u0001\u0002\u0000\b\u0010\u0000@\u0081\u0001\u0002\u0000\b\u0010 \u0000\u0000\u0001\u0002\u0000\b\u0010 \u0000\u0001\u0001\u0002\u0000\b\u0010 \u0000\u0080\u0001\u0002\u0000\b\u0010 \u0000\u0081\u0001\u0002\u0000\b\u0010 @\u0000\u0001\u0002\u0000\b\u0010 @\u0001\u0001\u0002\u0000\b\u0010 @\u0080\u0001\u0002\u0000\b\u0010 @\u0081\u0001\u0002\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0004\u0000\u0000\u0000\u0000\u0001\u0001\u0002\u0004\u0000\u0000\u0000\u0000\u0080\u0001\u0002\u0004\u0000\u0000\u0000\u0000\u0081\u0001\u0002\u0004\u0000\u0000\u0000@\u0000\u0001\u0002\u0004\u0000\u0000\u0000@\u0001\u0001\u0002\u0004\u0000\u0000\u0000@\u0080\u0001\u0002\u0004\u0000\u0000\u0000@\u0081\u0001\u0002\u0004\u0000\u0000 \u0000\u0000\u0001\u0002\u0004\u0000\u0000 \u0000\u0001\u0001\u0002\u0004\u0000\u0000 \u0000\u0080\u0001\u0002\u0004\u0000\u0000 \u0000\u0081\u0001\u0002\u0004\u0000\u0000 @\u0000\u0001\u0002\u0004\u0000\u0000 @\u0001\u0001\u0002\u0004\u0000\u0000 @\u0080\u0001\u0002\u0004\u0000\u0000 @\u0081\u0001\u0002\u0004\u0000\u0010\u0000\u0000\u0000\u0001\u0002\u0004\u0000\u0010\u0000\u0000\u0001\u0001\u0002\u0004\u0000\u0010\u0000\u0000\u0080\u0001\u0002\u0004\u0000\u0010\u0000\u0000\u0081\u0001\u0002\u0004\u0000\u0010\u0000@\u0000\u0001\u0002\u0004\u0000\u0010\u0000@\u0001\u0001\u0002\u0004\u0000\u0010\u0000@\u0080\u0001\u0002\u0004\u0000\u0010\u0000@\u0081\u0001\u0002\u0004\u0000\u0010 \u0000\u0000\u0001\u0002\u0004\u0000\u0010 \u0000\u0001\u0001\u0002\u0004\u0000\u0010 \u0000\u0080\u0001\u0002\u0004\u0000\u0010 \u0000\u0081\u0001\u0002\u0004\u0000\u0010 @\u0000\u0001\u0002\u0004\u0000\u0010 @\u0001\u0001\u0002\u0004\u0000\u0010 @\u0080\u0001\u0002\u0004\u0000\u0010 @\u0081\u0001\u0002\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002\u0004\b\u0000\u0000\u0000\u0001\u0001\u0002\u0004\b\u0000\u0000\u0000\u0080\u0001\u0002\u0004\b\u0000\u0000\u0000\u0081\u0001\u0002\u0004\b\u0000\u0000@\u0000\u0001\u0002\u0004\b\u0000\u0000@\u0001\u0001\u0002\u0004\b\u0000\u0000@\u0080\u0001\u0002\u0004\b\u0000\u0000@\u0081\u0001\u0002\u0004\b\u0000 \u0000\u0000\u0001\u0002\u0004\b\u0000 \u0000\u0001\u0001\u0002\u0004\b\u0000 \u0000\u0080\u0001\u0002\u0004\b\u0000 \u0000\u0081\u0001\u0002\u0004\b\u0000 @\u0000\u0001\u0002\u0004\b\u0000 @\u0001\u0001\u0002\u0004\b\u0000 @\u0080\u0001\u0002\u0004\b\u0000 @\u0081\u0001\u0002\u0004\b\u0010\u0000\u0000\u0000\u0001\u0002\u0004\b\u0010\u0000\u0000\u0001\u0001\u0002\u0004\b\u0010\u0000\u0000\u0080\u0001\u0002\u0004\b\u0010\u0000\u0000\u0081\u0001\u0002\u0004\b\u0010\u0000@\u0000\u0001\u0002\u0004\b\u0010\u0000@\u0001\u0001\u0002\u0004\b\u0010\u0000@\u0080\u0001\u0002\u0004\b\u0010\u0000@\u0081\u0001\u0002\u0004\b\u0010 \u0000\u0000\u0001\u0002\u0004\b\u0010 \u0000\u0001\u0001\u0002\u0004\b\u0010 \u0000\u0080\u0001\u0002\u0004\b\u0010 \u0000\u0081\u0001\u0002\u0004\b\u0010 @\u0000\u0001\u0002\u0004\b\u0010 @\u0001\u0001\u0002\u0004\b\u0010 @\u0080\u0001\u0002\u0004\b\u0010 @\u0081".getBytes("ISO-8859-1")).asLongBuffer().get(jArr, 0, 512);
        f9327 = jArr;
        f9331 = new byte[]{0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8};
        int i = f9332 + 101;
        f9323 = i % 128;
        if (i % 2 != 0) {
            Object[] objArr = null;
            int length = objArr.length;
        }
    }

    public f(int i) {
        this.f9333 = new long[i];
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    private static String m7784(int i, char c, int i2) {
        char[] cArr = new char[i2];
        int i3 = 0;
        while (true) {
            if ((i3 < i2 ? (char) 5 : 'D') == 'D') {
                break;
            }
            int i4 = f9332 + 23;
            f9323 = i4 % 128;
            int i5 = i4 % 2;
            cArr[i3] = (char) ((f9324[i + i3] ^ (i3 * f9325)) ^ c);
            i3++;
        }
        String str = new String(cArr);
        int i6 = f9323 + 39;
        f9332 = i6 % 128;
        if ((i6 % 2 == 0 ? '0' : 'b') != '0') {
            return str;
        }
        Object[] objArr = null;
        int length = objArr.length;
        return str;
    }

    /* renamed from: ᐝ  reason: contains not printable characters */
    static void m7790() {
        f9324 = new char[]{35948, 23201, 8679, 2106, 55105, 48542, 34013, 21411, 14867, 301, 61324, 46731, 40219, 25646, 13164, 6591, 57537, 53071, 38471, 31898, 19361, 4834, 63804, 49599, 62512, 8954, 22948, 28782, 44824, 50626, 64652, 11190, 16992, 31018, 38868, 52894, 58696, 7282, 19260, 25062, 39056, 46938, 60932, 1230, 13304, 27298, 33132, 47126, 54976, 3466, 9396, 21374, 35368, 41170, 57244, 63046, 11632, 17466, 29412, 43438, 49240, 65282, 5580, 19702, 31648, 37482, 51476, 59358, 7816, 13746, 27772, 39718, 45520, 59546, 1860, 15886, 21816, 33762, 47788, 53590, 2048, 9930, 24052, 29886, 41832, 55826, 61660, 12166};
        f9325 = 3158670142147778250L;
    }

    public Object clone() {
        f fVar = new f(util.a.y.fj.c.m8680(this.f9333));
        int i = f9323 + 35;
        f9332 = i % 128;
        if (!(i % 2 != 0)) {
            int i2 = 0 / 0;
            return fVar;
        }
        return fVar;
    }

    /* JADX WARN: Code restructure failed: missing block: B:10:0x001c, code lost:
        if ((!r0 ? '^' : 'Z') != 'Z') goto L31;
     */
    /* JADX WARN: Code restructure failed: missing block: B:15:0x0023, code lost:
        if ((r10 instanceof util.a.y.fd.f) == false) goto L31;
     */
    /* JADX WARN: Code restructure failed: missing block: B:16:0x0025, code lost:
        return false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:17:0x0026, code lost:
        r10 = (util.a.y.fd.f) r10;
        r0 = m7793();
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:0x0031, code lost:
        if (r10.m7793() == r0) goto L30;
     */
    /* JADX WARN: Code restructure failed: missing block: B:19:0x0033, code lost:
        r2 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x0035, code lost:
        r2 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x0036, code lost:
        if (r2 == true) goto L16;
     */
    /* JADX WARN: Code restructure failed: missing block: B:22:0x0038, code lost:
        return false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x0039, code lost:
        r2 = 0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x003c, code lost:
        if (r2 >= r0) goto L29;
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x003e, code lost:
        r5 = '_';
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x0041, code lost:
        r5 = '/';
     */
    /* JADX WARN: Code restructure failed: missing block: B:28:0x0043, code lost:
        if (r5 == '/') goto L27;
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x004f, code lost:
        if (r9.f9333[r2] == r10.f9333[r2]) goto L23;
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x0051, code lost:
        r10 = util.a.y.fd.f.f9323 + 17;
        util.a.y.fd.f.f9332 = r10 % 128;
        r10 = r10 % 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x005b, code lost:
        return false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:33:0x005c, code lost:
        r2 = r2 + 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:34:0x005f, code lost:
        return true;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public boolean equals(java.lang.Object r10) {
        /*
            r9 = this;
            int r0 = util.a.y.fd.f.f9323
            int r0 = r0 + 67
            int r1 = r0 % 128
            util.a.y.fd.f.f9332 = r1
            int r0 = r0 % 2
            r1 = 0
            if (r0 != 0) goto L21
            boolean r0 = r10 instanceof util.a.y.fd.f
            r2 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L1f
            r2 = 90
            if (r0 != 0) goto L1a
            r0 = 94
            goto L1c
        L1a:
            r0 = 90
        L1c:
            if (r0 == r2) goto L26
            goto L25
        L1f:
            r10 = move-exception
            throw r10
        L21:
            boolean r0 = r10 instanceof util.a.y.fd.f
            if (r0 != 0) goto L26
        L25:
            return r1
        L26:
            util.a.y.fd.f r10 = (util.a.y.fd.f) r10
            int r0 = r9.m7793()
            int r2 = r10.m7793()
            r3 = 1
            if (r2 == r0) goto L35
            r2 = 0
            goto L36
        L35:
            r2 = 1
        L36:
            if (r2 == r3) goto L39
            return r1
        L39:
            r2 = 0
        L3a:
            r4 = 47
            if (r2 >= r0) goto L41
            r5 = 95
            goto L43
        L41:
            r5 = 47
        L43:
            if (r5 == r4) goto L5f
            long[] r4 = r9.f9333
            r5 = r4[r2]
            long[] r4 = r10.f9333
            r7 = r4[r2]
            int r4 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r4 == 0) goto L5c
            int r10 = util.a.y.fd.f.f9323
            int r10 = r10 + 17
            int r0 = r10 % 128
            util.a.y.fd.f.f9332 = r0
            int r10 = r10 % 2
            return r1
        L5c:
            int r2 = r2 + 1
            goto L3a
        L5f:
            return r3
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.equals(java.lang.Object):boolean");
    }

    public int hashCode() {
        int m7793;
        int i = f9332 + 5;
        f9323 = i % 128;
        int i2 = 0;
        int i3 = 1;
        if (i % 2 != 0) {
            m7793 = m7793();
        } else {
            m7793 = m7793();
            i2 = 1;
            i3 = 0;
        }
        while (true) {
            if ((i3 < m7793 ? ' ' : (char) 19) == 19) {
                return i2;
            }
            int i4 = f9323 + 33;
            f9332 = i4 % 128;
            int i5 = i4 % 2;
            long j = this.f9333[i3];
            i2 = (((i2 * 31) ^ ((int) j)) * 31) ^ ((int) (j >>> 32));
            i3++;
        }
    }

    public String toString() {
        int i = f9323 + 77;
        f9332 = i % 128;
        int i2 = i % 2;
        int m7793 = m7793();
        if (m7793 == 0) {
            int i3 = f9332 + 109;
            f9323 = i3 % 128;
            int i4 = i3 % 2;
            return m7784(22 - TextUtils.indexOf((CharSequence) "", '0', 0, 0), (char) ((ViewConfiguration.getFadingEdgeLength() >> 16) + 49551), ExpandableListView.getPackedPositionType(0L) + 1).intern();
        }
        int i5 = m7793 - 1;
        StringBuffer stringBuffer = new StringBuffer(Long.toBinaryString(this.f9333[i5]));
        while (true) {
            i5--;
            if ((i5 >= 0 ? 'W' : '8') == '8') {
                return stringBuffer.toString();
            }
            int i6 = f9332 + 7;
            f9323 = i6 % 128;
            int i7 = i6 % 2;
            String binaryString = Long.toBinaryString(this.f9333[i5]);
            int length = binaryString.length();
            if (length < 64) {
                int i8 = f9332 + 73;
                f9323 = i8 % 128;
                int i9 = i8 % 2;
                stringBuffer.append(m7784((ViewConfiguration.getFadingEdgeLength() >> 16) + 24, (char) (62463 - TextUtils.indexOf((CharSequence) "", '0')), 63 - (ExpandableListView.getPackedPositionForChild(0, 0) > 0L ? 1 : (ExpandableListView.getPackedPositionForChild(0, 0) == 0L ? 0 : -1))).intern().substring(length));
            }
            stringBuffer.append(binaryString);
            int i10 = f9323 + 11;
            f9332 = i10 % 128;
            int i11 = i10 % 2;
        }
    }

    /* renamed from: ʻ  reason: contains not printable characters */
    public f m7791() {
        int i = f9332 + 51;
        f9323 = i % 128;
        int i2 = i % 2;
        if (this.f9333.length == 0) {
            f fVar = new f(new long[]{1});
            int i3 = f9332 + 15;
            f9323 = i3 % 128;
            int i4 = i3 % 2;
            return fVar;
        }
        long[] m7774 = m7774(Math.max(1, m7793()));
        m7774[0] = 1 ^ m7774[0];
        return new f(m7774);
    }

    /* renamed from: ʽ  reason: contains not printable characters */
    public boolean m7792() {
        int i = f9332 + 107;
        f9323 = i % 128;
        if (!(i % 2 == 0)) {
            int length = this.f9333.length;
            Object obj = null;
            super.hashCode();
            if ((length > 0 ? 'M' : (char) 5) == 5) {
                return false;
            }
        } else {
            if ((this.f9333.length > 0 ? (char) 24 : Typography.dollar) == '$') {
                return false;
            }
        }
        if ((this.f9333[0] & 1) != 0) {
            int i2 = f9323 + 63;
            f9332 = i2 % 128;
            return (i2 % 2 != 0 ? '(' : (char) 5) == '(';
        }
        return false;
    }

    /* renamed from: ˊ  reason: contains not printable characters */
    public int m7793() {
        int i = f9323 + 21;
        f9332 = i % 128;
        int i2 = i % 2;
        int m7802 = m7802(this.f9333.length);
        int i3 = f9332 + 61;
        f9323 = i3 % 128;
        int i4 = i3 % 2;
        return m7802;
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    public int m7795() {
        long j;
        char c;
        int i = f9332 + 71;
        f9323 = i % 128;
        int i2 = i % 2;
        int length = this.f9333.length;
        do {
            if (!(length != 0)) {
                int i3 = f9332 + 95;
                f9323 = i3 % 128;
                int i4 = i3 % 2;
                return 0;
            }
            length--;
            j = this.f9333[length];
            if (j != 0) {
                c = ',';
                continue;
            } else {
                c = '^';
                continue;
            }
        } while (c != ',');
        int m7768 = (length << 6) + m7768(j);
        int i5 = f9323 + 53;
        f9332 = i5 % 128;
        if ((i5 % 2 == 0 ? 'a' : (char) 29) != 29) {
            Object[] objArr = null;
            int length2 = objArr.length;
            return m7768;
        }
        return m7768;
    }

    /* JADX WARN: Code restructure failed: missing block: B:15:0x002b, code lost:
        if ((r0[0] == 1) != false) goto L8;
     */
    /* JADX WARN: Code restructure failed: missing block: B:16:0x002d, code lost:
        r1 = r1 + 101;
        util.a.y.fd.f.f9323 = r1 % 128;
        r1 = r1 % 2;
        r1 = 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:0x0037, code lost:
        if (r1 >= r0.length) goto L18;
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x003d, code lost:
        if (r0[r1] == 0) goto L13;
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x003f, code lost:
        r0 = util.a.y.fd.f.f9332 + 83;
        util.a.y.fd.f.f9323 = r0 % 128;
        r0 = r0 % 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:22:0x0049, code lost:
        return false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x004a, code lost:
        r1 = r1 + 1;
        r6 = util.a.y.fd.f.f9332 + 1;
        util.a.y.fd.f.f9323 = r6 % 128;
        r6 = r6 % 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x0056, code lost:
        return true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x0057, code lost:
        return false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:9:0x001b, code lost:
        if (r0[0] != 0) goto L20;
     */
    /* renamed from: ˎ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public boolean m7801() {
        /*
            r11 = this;
            int r0 = util.a.y.fd.f.f9323
            int r0 = r0 + 73
            int r1 = r0 % 128
            util.a.y.fd.f.f9332 = r1
            int r0 = r0 % 2
            r2 = 1
            r3 = 0
            if (r0 != 0) goto L10
            r0 = 1
            goto L11
        L10:
            r0 = 0
        L11:
            r4 = 0
            if (r0 == 0) goto L1e
            long[] r0 = r11.f9333
            r6 = r0[r3]
            int r8 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r8 == 0) goto L2d
            goto L57
        L1e:
            long[] r0 = r11.f9333
            r6 = r0[r3]
            r8 = 1
            int r10 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1))
            if (r10 == 0) goto L2a
            r6 = 0
            goto L2b
        L2a:
            r6 = 1
        L2b:
            if (r6 == 0) goto L57
        L2d:
            int r1 = r1 + 101
            int r6 = r1 % 128
            util.a.y.fd.f.f9323 = r6
            int r1 = r1 % 2
            r1 = 1
        L36:
            int r6 = r0.length
            if (r1 >= r6) goto L56
            r6 = r0[r1]
            int r8 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r8 == 0) goto L4a
            int r0 = util.a.y.fd.f.f9332
            int r0 = r0 + 83
            int r1 = r0 % 128
            util.a.y.fd.f.f9323 = r1
            int r0 = r0 % 2
            return r3
        L4a:
            int r1 = r1 + 1
            int r6 = util.a.y.fd.f.f9332
            int r6 = r6 + r2
            int r7 = r6 % 128
            util.a.y.fd.f.f9323 = r7
            int r6 = r6 % 2
            goto L36
        L56:
            return r2
        L57:
            return r3
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7801():boolean");
    }

    /* renamed from: ˏ  reason: contains not printable characters */
    public int m7802(int i) {
        long[] jArr = this.f9333;
        int min = Math.min(i, jArr.length);
        if (min < 1) {
            int i2 = f9332 + 79;
            f9323 = i2 % 128;
            return i2 % 2 != 0 ? 1 : 0;
        }
        if ((jArr[0] != 0 ? 'I' : (char) 6) != 6) {
            do {
                min--;
            } while (jArr[min] == 0);
            return min + 1;
        }
        do {
            min--;
            if (jArr[min] != 0) {
                return min + 1;
            }
        } while (min > 0);
        int i3 = f9332 + 89;
        f9323 = i3 % 128;
        if (i3 % 2 == 0) {
            return 0;
        }
        Object[] objArr = null;
        int length = objArr.length;
        return 0;
    }

    /* renamed from: ˊ  reason: contains not printable characters */
    private static long m7766(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = f9323 + 63;
        f9332 = i5 % 128;
        int i6 = i5 % 2;
        int i7 = 64 - i4;
        long j = 0;
        int i8 = 0;
        while (i8 < i3) {
            int i9 = f9332 + 77;
            f9323 = i9 % 128;
            if (!(i9 % 2 == 0)) {
                long j2 = jArr2[i2 + i8];
                int i10 = i + i8;
                jArr[i10] = jArr[i10] - (j & (j2 >> i4));
                j = j2 >> i7;
                i8 += 116;
            } else {
                long j3 = jArr2[i2 + i8];
                int i11 = i + i8;
                jArr[i11] = (j | (j3 << i4)) ^ jArr[i11];
                j = j3 >>> i7;
                i8++;
            }
        }
        int i12 = f9332 + 83;
        f9323 = i12 % 128;
        if (i12 % 2 != 0) {
            Object obj = null;
            super.hashCode();
            return j;
        }
        return j;
    }

    public f(long[] jArr) {
        this.f9333 = jArr;
    }

    public f(long[] jArr, int i, int i2) {
        if (i == 0 && i2 == jArr.length) {
            this.f9333 = jArr;
            return;
        }
        long[] jArr2 = new long[i2];
        this.f9333 = jArr2;
        System.arraycopy(jArr, i, jArr2, 0, i2);
    }

    /* JADX WARN: Code restructure failed: missing block: B:26:0x004c, code lost:
        if ((r6 == 0 ? 'c' : 'F') != 'c') goto L24;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x0051, code lost:
        if (r6 == 0) goto L19;
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x0053, code lost:
        r6 = util.a.y.fd.f.f9331[r7];
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x0058, code lost:
        r6 = util.a.y.fd.f.f9331[r6] + 8;
     */
    /* renamed from: ˋ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    private static int m7768(long r6) {
        /*
            int r0 = util.a.y.fd.f.f9323
            int r1 = r0 + 61
            int r2 = r1 % 128
            util.a.y.fd.f.f9332 = r2
            int r1 = r1 % 2
            r2 = 63
            if (r1 != 0) goto L11
            r1 = 63
            goto L12
        L11:
            r1 = 5
        L12:
            r3 = 0
            r4 = 105(0x69, float:1.47E-43)
            r5 = 32
            if (r1 == r2) goto L1f
            long r1 = r6 >>> r5
            int r2 = (int) r1
            if (r2 != 0) goto L27
            goto L24
        L1f:
            long r1 = r6 >>> r4
            int r2 = (int) r1
            if (r2 != 0) goto L27
        L24:
            int r7 = (int) r6
            r5 = 0
            goto L28
        L27:
            r7 = r2
        L28:
            int r6 = r7 >>> 16
            if (r6 != 0) goto L66
            int r6 = r0 + 35
            int r1 = r6 % 128
            util.a.y.fd.f.f9332 = r1
            int r6 = r6 % 2
            r1 = 34
            r2 = 8
            if (r6 != 0) goto L3d
            r6 = 8
            goto L3f
        L3d:
            r6 = 34
        L3f:
            if (r6 == r1) goto L4f
            int r6 = r7 << 101
            r1 = 99
            if (r6 != 0) goto L4a
            r3 = 99
            goto L4c
        L4a:
            r3 = 70
        L4c:
            if (r3 == r1) goto L53
            goto L58
        L4f:
            int r6 = r7 >>> 8
            if (r6 != 0) goto L58
        L53:
            byte[] r6 = util.a.y.fd.f.f9331
            r6 = r6[r7]
            goto L5d
        L58:
            byte[] r7 = util.a.y.fd.f.f9331
            r6 = r7[r6]
            int r6 = r6 + r2
        L5d:
            int r0 = r0 + 113
            int r7 = r0 % 128
            util.a.y.fd.f.f9332 = r7
            int r0 = r0 % 2
            goto L7b
        L66:
            int r7 = r6 >>> 8
            if (r7 != 0) goto L6b
            goto L6c
        L6b:
            r3 = 1
        L6c:
            if (r3 == 0) goto L75
            byte[] r6 = util.a.y.fd.f.f9331
            r6 = r6[r7]
            int r6 = r6 + 24
            goto L7b
        L75:
            byte[] r7 = util.a.y.fd.f.f9331
            r6 = r7[r6]
            int r6 = r6 + 16
        L7b:
            int r5 = r5 + r6
            int r6 = util.a.y.fd.f.f9332
            int r6 = r6 + r4
            int r7 = r6 % 128
            util.a.y.fd.f.f9323 = r7
            int r6 = r6 % 2
            return r5
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7768(long):int");
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    public boolean m7806() {
        int i;
        int i2 = f9332 + 99;
        int i3 = i2 % 128;
        f9323 = i3;
        int i4 = i2 % 2;
        long[] jArr = this.f9333;
        int i5 = i3 + 27;
        f9332 = i5 % 128;
        int i6 = i5 % 2;
        int i7 = 0;
        while (true) {
            if ((i7 < jArr.length ? 'N' : ']') == 'N') {
                int i8 = f9323 + 5;
                i = i8 % 128;
                f9332 = i;
                if ((i8 % 2 == 0 ? 'C' : (char) 18) == 'C') {
                    if (!(jArr[i7] == 0)) {
                        break;
                    }
                    i7++;
                } else {
                    if (!(jArr[i7] == 0)) {
                        break;
                    }
                    i7++;
                }
            } else {
                return true;
            }
        }
        int i9 = i + 37;
        int i10 = i9 % 128;
        f9323 = i10;
        int i11 = i9 % 2;
        int i12 = i10 + 113;
        f9332 = i12 % 128;
        int i13 = i12 % 2;
        return false;
    }

    /* JADX WARN: Code restructure failed: missing block: B:17:0x0030, code lost:
        if ((r0 == 0 ? 15 : '%') != 15) goto L9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:0x0032, code lost:
        r2 = r0 - 1;
        r3 = r14.f9333[r2];
        r5 = new byte[8];
        r7 = 0;
        r8 = 7;
        r9 = 0;
        r10 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x0042, code lost:
        if (r8 < 0) goto L44;
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x0044, code lost:
        r12 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:22:0x0046, code lost:
        r12 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x0047, code lost:
        if (r12 == true) goto L14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x0049, code lost:
        r1 = new byte[(r2 * 8) + r9];
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x004e, code lost:
        if (r7 >= r9) goto L25;
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x0050, code lost:
        r2 = util.a.y.fd.f.f9323 + 67;
        util.a.y.fd.f.f9332 = r2 % 128;
        r2 = r2 % 2;
        r1[r7] = r5[r7];
        r7 = r7 + 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x0061, code lost:
        r0 = r0 - 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:28:0x0063, code lost:
        if (r0 < 0) goto L40;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x0065, code lost:
        r2 = util.a.y.fd.f.f9323 + 9;
        util.a.y.fd.f.f9332 = r2 % 128;
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x0071, code lost:
        if ((r2 % 2) != 0) goto L39;
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x0073, code lost:
        r2 = 'J';
     */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x0076, code lost:
        r2 = 'H';
     */
    /* JADX WARN: Code restructure failed: missing block: B:33:0x0078, code lost:
        if (r2 == 'J') goto L38;
     */
    /* JADX WARN: Code restructure failed: missing block: B:34:0x007a, code lost:
        r3 = r14.f9333[r0];
        r2 = 7;
     */
    /* JADX WARN: Code restructure failed: missing block: B:35:0x0080, code lost:
        r3 = r14.f9333[r0];
        r2 = 93;
     */
    /* JADX WARN: Code restructure failed: missing block: B:36:0x0086, code lost:
        if (r2 < 0) goto L36;
     */
    /* JADX WARN: Code restructure failed: missing block: B:37:0x0088, code lost:
        r5 = util.a.y.fd.f.f9332;
        r7 = r5 + 29;
        util.a.y.fd.f.f9323 = r7 % 128;
        r7 = r7 % 2;
        r1[r9] = (byte) (r3 >>> (r2 * 8));
        r2 = r2 - 1;
        r5 = r5 + 89;
        util.a.y.fd.f.f9323 = r5 % 128;
        r5 = r5 % 2;
        r9 = r9 + 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:38:0x00a8, code lost:
        r0 = r0 - 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:40:0x00b0, code lost:
        return new java.math.BigInteger(1, r1);
     */
    /* JADX WARN: Code restructure failed: missing block: B:41:0x00b1, code lost:
        r12 = (byte) (r3 >>> (r8 * 8));
     */
    /* JADX WARN: Code restructure failed: missing block: B:42:0x00b7, code lost:
        if (r10 != false) goto L19;
     */
    /* JADX WARN: Code restructure failed: missing block: B:43:0x00b9, code lost:
        if (r12 == 0) goto L17;
     */
    /* JADX WARN: Code restructure failed: missing block: B:44:0x00bb, code lost:
        r5[r9] = r12;
        r9 = r9 + 1;
        r10 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:45:0x00c1, code lost:
        r8 = r8 - 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:47:0x00c7, code lost:
        return util.a.y.fd.b.f9256;
     */
    /* JADX WARN: Code restructure failed: missing block: B:9:0x001f, code lost:
        if (r0 == 0) goto L45;
     */
    /* renamed from: ˏ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public java.math.BigInteger m7803() {
        /*
            Method dump skipped, instructions count: 200
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7803():java.math.BigInteger");
    }

    /* renamed from: ˊ  reason: contains not printable characters */
    private static void m7767(long[] jArr, int i, long[] jArr2, int i2, int i3) {
        int i4 = f9323 + 49;
        f9332 = i4 % 128;
        int i5 = !(i4 % 2 != 0) ? 1 : 0;
        while (i5 < i3) {
            int i6 = f9332 + 41;
            f9323 = i6 % 128;
            if ((i6 % 2 != 0 ? '0' : (char) 16) != 16) {
                int i7 = i % i5;
                jArr[i7] = jArr[i7] & jArr2[i2 + i5];
                i5 += 80;
            } else {
                int i8 = i + i5;
                jArr[i8] = jArr[i8] ^ jArr2[i2 + i5];
                i5++;
            }
        }
    }

    /* renamed from: ˎ  reason: contains not printable characters */
    private static void m7775(long[] jArr, int i, int i2) {
        int i3 = f9323;
        int i4 = i3 + 121;
        f9332 = i4 % 128;
        int i5 = i4 % 2;
        int i6 = i + (i2 >>> 6);
        jArr[i6] = jArr[i6] ^ (1 << (i2 & 63));
        int i7 = i3 + 103;
        f9332 = i7 % 128;
        if ((i7 % 2 == 0 ? (char) 1 : '[') != '[') {
            int i8 = 99 / 0;
        }
    }

    public f(BigInteger bigInteger) {
        int i;
        if (bigInteger != null && bigInteger.signum() >= 0) {
            if (bigInteger.signum() == 0) {
                this.f9333 = new long[]{0};
                return;
            }
            byte[] byteArray = bigInteger.toByteArray();
            int length = byteArray.length;
            if (byteArray[0] == 0) {
                length--;
                i = 1;
            } else {
                i = 0;
            }
            int i2 = (length + 7) / 8;
            this.f9333 = new long[i2];
            int i3 = i2 - 1;
            int i4 = (length % 8) + i;
            if (i < i4) {
                long j = 0;
                while (i < i4) {
                    j = (j << 8) | (byteArray[i] & 255);
                    i++;
                }
                this.f9333[i3] = j;
                i3--;
            }
            while (i3 >= 0) {
                long j2 = 0;
                int i5 = 0;
                while (i5 < 8) {
                    j2 = (j2 << 8) | (byteArray[i] & 255);
                    i5++;
                    i++;
                }
                this.f9333[i3] = j2;
                i3--;
            }
            return;
        }
        throw new IllegalArgumentException(m7784(ViewConfiguration.getJumpTapTimeout() >> 16, (char) (TextUtils.indexOf((CharSequence) "", '0') + 35846), (ViewConfiguration.getMaximumFlingVelocity() >> 16) + 23).intern());
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    private long[] m7774(int i) {
        long[] jArr;
        int i2 = f9332 + 29;
        f9323 = i2 % 128;
        if (i2 % 2 == 0) {
            jArr = new long[i];
            long[] jArr2 = this.f9333;
            System.arraycopy(jArr2, 0, jArr, 0, Math.min(jArr2.length, i));
        } else {
            jArr = new long[i];
            long[] jArr3 = this.f9333;
            System.arraycopy(jArr3, 1, jArr, 1, Math.min(jArr3.length, i));
        }
        int i3 = f9332 + 31;
        f9323 = i3 % 128;
        int i4 = i3 % 2;
        return jArr;
    }

    /* renamed from: ˎ  reason: contains not printable characters */
    private static void m7777(long[] jArr, int i, int i2, int i3, int[] iArr) {
        int i4;
        int i5 = f9332 + 19;
        f9323 = i5 % 128;
        if ((i5 % 2 != 0 ? '+' : '^') != '+') {
            m7775(jArr, i, i2);
            i4 = i2 - i3;
        } else {
            m7775(jArr, i, i2);
            i4 = i2 >> i3;
        }
        int length = iArr.length;
        while (true) {
            length--;
            if (!(length >= 0)) {
                break;
            }
            int i6 = f9323 + 29;
            f9332 = i6 % 128;
            m7775(jArr, i, (i6 % 2 == 0 ? (char) 18 : (char) 22) != 18 ? iArr[length] + i4 : iArr[length] - i4);
            int i7 = f9323 + 39;
            f9332 = i7 % 128;
            int i8 = i7 % 2;
        }
        m7775(jArr, i, i4);
        int i9 = f9323 + 21;
        f9332 = i9 % 128;
        if (i9 % 2 == 0) {
            int i10 = 14 / 0;
        }
    }

    /* renamed from: ˊ  reason: contains not printable characters */
    public void m7794(int i, int[] iArr) {
        long[] jArr;
        int m7779;
        int i2 = f9332 + 7;
        f9323 = i2 % 128;
        if ((i2 % 2 != 0 ? (char) 11 : 'B') != 11) {
            jArr = this.f9333;
            m7779 = m7779(jArr, 0, jArr.length, i, iArr);
            if (m7779 >= jArr.length) {
                return;
            }
        } else {
            jArr = this.f9333;
            m7779 = m7779(jArr, 0, jArr.length, i, iArr);
            if (m7779 >= jArr.length) {
                return;
            }
        }
        long[] jArr2 = new long[m7779];
        this.f9333 = jArr2;
        System.arraycopy(jArr, 0, jArr2, 0, m7779);
        int i3 = f9332 + 21;
        f9323 = i3 % 128;
        int i4 = i3 % 2;
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    private int m7783(int i) {
        boolean z;
        long j;
        int i2 = f9323 + 47;
        f9332 = i2 % 128;
        int i3 = i2 % 2;
        int i4 = (i + 62) >>> 6;
        do {
            z = true;
            if (!(i4 != 0)) {
                int i5 = f9332 + 105;
                f9323 = i5 % 128;
                int i6 = i5 % 2;
                return 0;
            }
            i4--;
            j = this.f9333[i4];
            if (j == 0) {
                z = false;
                continue;
            }
        } while (!z);
        return (i4 << 6) + m7768(j);
    }

    /* renamed from: ˎ  reason: contains not printable characters */
    private static void m7776(long[] jArr, int i, int i2, int i3, int i4, int[] iArr) {
        int i5 = f9332 + 125;
        f9323 = i5 % 128;
        int i6 = i5 % 2;
        int i7 = (i3 << 6) - i4;
        int length = iArr.length;
        while (true) {
            length--;
            if (!(length >= 0)) {
                m7787(jArr, i, jArr, i + i3, i2 - i3, i7);
                int i8 = f9323 + 57;
                f9332 = i8 % 128;
                int i9 = i8 % 2;
                return;
            }
            m7787(jArr, i, jArr, i + i3, i2 - i3, i7 + iArr[length]);
            int i10 = f9323 + 71;
            f9332 = i10 % 128;
            int i11 = i10 % 2;
        }
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    private static void m7788(long[] jArr, int i, long[] jArr2, int i2, long[] jArr3, int i3, int i4) {
        int i5 = 0;
        while (true) {
            if (!(i5 < i4)) {
                break;
            }
            int i6 = f9332 + 123;
            f9323 = i6 % 128;
            int i7 = i6 % 2;
            int i8 = i + i5;
            jArr[i8] = jArr[i8] ^ (jArr2[i2 + i5] ^ jArr3[i3 + i5]);
            i5++;
        }
        int i9 = f9323 + 85;
        f9332 = i9 % 128;
        if (!(i9 % 2 == 0)) {
            return;
        }
        Object[] objArr = null;
        int length = objArr.length;
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    private static long m7769(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = f9323 + 85;
        int i6 = i5 % 128;
        f9332 = i6;
        int i7 = i5 % 2;
        int i8 = 64 - i4;
        long j = 0;
        int i9 = i6 + 33;
        f9323 = i9 % 128;
        int i10 = i9 % 2;
        int i11 = 0;
        while (true) {
            if (i11 >= i3) {
                return j;
            }
            long j2 = jArr[i + i11];
            jArr2[i2 + i11] = j | (j2 << i4);
            j = j2 >>> i8;
            i11++;
        }
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    private static void m7786(long[] jArr, int i, int i2, long j) {
        int i3 = i + (i2 >>> 6);
        int i4 = i2 & 63;
        if (i4 != 0) {
            jArr[i3] = jArr[i3] ^ (j << i4);
            long j2 = j >>> (64 - i4);
            if (j2 != 0) {
                int i5 = f9332 + 67;
                f9323 = i5 % 128;
                if (!(i5 % 2 == 0)) {
                    int i6 = i3 + 47;
                    jArr[i6] = jArr[i6] % j2;
                    return;
                }
                int i7 = i3 + 1;
                jArr[i7] = j2 ^ jArr[i7];
                return;
            }
            return;
        }
        int i8 = f9332 + 107;
        f9323 = i8 % 128;
        int i9 = i8 % 2;
        jArr[i3] = jArr[i3] ^ j;
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    private void m7771(f fVar, int i, int i2) {
        int i3 = (i + 63) >>> 6;
        int i4 = i2 >>> 6;
        int i5 = i2 & 63;
        if ((i5 == 0 ? 'D' : (char) 0) != 'D') {
            long m7766 = m7766(this.f9333, i4, fVar.f9333, 0, i3, i5);
            if (m7766 == 0) {
                return;
            }
            int i6 = f9323 + 113;
            f9332 = i6 % 128;
            int i7 = i6 % 2;
            long[] jArr = this.f9333;
            int i8 = i3 + i4;
            jArr[i8] = m7766 ^ jArr[i8];
            return;
        }
        m7767(this.f9333, i4, fVar.f9333, 0, i3);
        int i9 = f9323 + 97;
        f9332 = i9 % 128;
        int i10 = i9 % 2;
    }

    /* JADX WARN: Code restructure failed: missing block: B:14:0x0037, code lost:
        if (((r8[r9 + (r10 >>> 6)] & (1 << (r10 & 63))) != 0) != false) goto L9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:15:0x0039, code lost:
        r0 = r0 + 43;
        util.a.y.fd.f.f9332 = r0 % 128;
        r0 = r0 % 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:16:0x0042, code lost:
        return false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:?, code lost:
        return true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:8:0x0021, code lost:
        if ((r8[r9 >>> (r10 % 96)] - (0 >> (r10 & 91)) != 0) != false) goto L9;
     */
    /* renamed from: ॱ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    private static boolean m7789(long[] r8, int r9, int r10) {
        /*
            int r0 = util.a.y.fd.f.f9323
            int r1 = r0 + 121
            int r2 = r1 % 128
            util.a.y.fd.f.f9332 = r2
            int r1 = r1 % 2
            r2 = 1
            r3 = 0
            r4 = 0
            if (r1 != 0) goto L24
            int r1 = r10 % 96
            r10 = r10 & 91
            long r6 = r4 >> r10
            int r9 = r9 >>> r1
            r9 = r8[r9]
            long r9 = r9 - r6
            int r8 = (r9 > r4 ? 1 : (r9 == r4 ? 0 : -1))
            if (r8 == 0) goto L20
            r8 = 1
            goto L21
        L20:
            r8 = 0
        L21:
            if (r8 == 0) goto L42
            goto L39
        L24:
            int r1 = r10 >>> 6
            r10 = r10 & 63
            r6 = 1
            long r6 = r6 << r10
            int r9 = r9 + r1
            r9 = r8[r9]
            long r8 = r9 & r6
            int r10 = (r8 > r4 ? 1 : (r8 == r4 ? 0 : -1))
            if (r10 == 0) goto L36
            r8 = 1
            goto L37
        L36:
            r8 = 0
        L37:
            if (r8 == 0) goto L42
        L39:
            int r0 = r0 + 43
            int r8 = r0 % 128
            util.a.y.fd.f.f9332 = r8
            int r0 = r0 % 2
            goto L43
        L42:
            r2 = 0
        L43:
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7789(long[], int, int):boolean");
    }

    /* renamed from: ˎ  reason: contains not printable characters */
    public f m7799(int i, int i2, int[] iArr) {
        int m7793 = m7793();
        if (m7793 == 0) {
            int i3 = f9332 + 21;
            int i4 = i3 % 128;
            f9323 = i4;
            int i5 = i3 % 2;
            int i6 = i4 + 21;
            f9332 = i6 % 128;
            int i7 = i6 % 2;
            return this;
        }
        int i8 = ((i2 + 63) >>> 6) << 1;
        long[] jArr = new long[i8];
        System.arraycopy(this.f9333, 0, jArr, 0, m7793);
        while (true) {
            i--;
            if ((i >= 0 ? 'Z' : (char) 6) != 6) {
                int i9 = f9332 + 71;
                f9323 = i9 % 128;
                int i10 = i9 % 2;
                m7778(jArr, m7793, i2, iArr);
                m7793 = m7779(jArr, 0, i8, i2, iArr);
            } else {
                return new f(jArr, 0, m7793);
            }
        }
    }

    /* renamed from: ˊ  reason: contains not printable characters */
    private static long m7765(int i) {
        int i2 = f9323 + 41;
        int i3 = i2 % 128;
        f9332 = i3;
        int i4 = i2 % 2;
        short[] sArr = f9330;
        long j = ((((sArr[i >>> 24] << 16) | sArr[(i >>> 16) & 255]) & 4294967295L) << 32) | (4294967295L & (sArr[i & 255] | (sArr[(i >>> 8) & 255] << 16)));
        int i5 = i3 + 77;
        f9323 = i5 % 128;
        if ((i5 % 2 != 0 ? '[' : JwtParser.SEPARATOR_CHAR) != '[') {
            return j;
        }
        int i6 = 31 / 0;
        return j;
    }

    /* JADX WARN: Code restructure failed: missing block: B:10:0x001b, code lost:
        if (r0 == 0) goto L16;
     */
    /* JADX WARN: Code restructure failed: missing block: B:15:0x0024, code lost:
        if (r0 == 0) goto L16;
     */
    /* JADX WARN: Code restructure failed: missing block: B:16:0x0026, code lost:
        r4 = util.a.y.fd.f.f9332 + 125;
        util.a.y.fd.f.f9323 = r4 % 128;
     */
    /* JADX WARN: Code restructure failed: missing block: B:17:0x0032, code lost:
        if ((r4 % 2) == 0) goto L27;
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:0x0034, code lost:
        r4 = kotlin.text.Typography.greater;
     */
    /* JADX WARN: Code restructure failed: missing block: B:19:0x0037, code lost:
        r4 = 'X';
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x0039, code lost:
        if (r4 == 'X') goto L20;
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x003b, code lost:
        r4 = r2.length;
     */
    /* JADX WARN: Code restructure failed: missing block: B:22:0x003c, code lost:
        return;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x003f, code lost:
        return;
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x0040, code lost:
        r1 = r0 + r5;
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x0045, code lost:
        if (r1 <= r3.f9333.length) goto L13;
     */
    /* JADX WARN: Code restructure failed: missing block: B:28:0x0047, code lost:
        r3.f9333 = m7774(r1);
        r1 = util.a.y.fd.f.f9323 + 119;
        util.a.y.fd.f.f9332 = r1 % 128;
        r1 = r1 % 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x0057, code lost:
        m7767(r3.f9333, r5, r4.f9333, 0, r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x005f, code lost:
        return;
     */
    /* renamed from: ˋ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public void m7798(util.a.y.fd.f r4, int r5) {
        /*
            r3 = this;
            int r0 = util.a.y.fd.f.f9323
            int r0 = r0 + 75
            int r1 = r0 % 128
            util.a.y.fd.f.f9332 = r1
            int r0 = r0 % 2
            r1 = 74
            if (r0 != 0) goto L11
            r0 = 28
            goto L13
        L11:
            r0 = 74
        L13:
            r2 = 0
            if (r0 == r1) goto L20
            int r0 = r4.m7793()
            int r1 = r2.length     // Catch: java.lang.Throwable -> L1e
            if (r0 != 0) goto L40
            goto L26
        L1e:
            r4 = move-exception
            throw r4
        L20:
            int r0 = r4.m7793()
            if (r0 != 0) goto L40
        L26:
            int r4 = util.a.y.fd.f.f9332
            int r4 = r4 + 125
            int r5 = r4 % 128
            util.a.y.fd.f.f9323 = r5
            int r4 = r4 % 2
            r5 = 88
            if (r4 == 0) goto L37
            r4 = 62
            goto L39
        L37:
            r4 = 88
        L39:
            if (r4 == r5) goto L3f
            int r4 = r2.length     // Catch: java.lang.Throwable -> L3d
            return
        L3d:
            r4 = move-exception
            throw r4
        L3f:
            return
        L40:
            int r1 = r0 + r5
            long[] r2 = r3.f9333
            int r2 = r2.length
            if (r1 <= r2) goto L57
            long[] r1 = r3.m7774(r1)
            r3.f9333 = r1
            int r1 = util.a.y.fd.f.f9323
            int r1 = r1 + 119
            int r2 = r1 % 128
            util.a.y.fd.f.f9332 = r2
            int r1 = r1 % 2
        L57:
            long[] r1 = r3.f9333
            long[] r4 = r4.f9333
            r2 = 0
            m7767(r1, r5, r4, r2, r0)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7798(util.a.y.fd.f, int):void");
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    public f m7805(f fVar, int i, int[] iArr) {
        int i2;
        int i3;
        f fVar2;
        f fVar3;
        int i4 = f9332 + 61;
        f9323 = i4 % 128;
        int i5 = 2;
        int i6 = i4 % 2;
        int m7795 = m7795();
        if (m7795 != 0) {
            int m77952 = fVar.m7795();
            if (m77952 == 0) {
                int i7 = f9332 + 9;
                f9323 = i7 % 128;
                if ((i7 % 2 != 0 ? ']' : '3') != '3') {
                    int i8 = 34 / 0;
                    return fVar;
                }
                return fVar;
            }
            if (m7795 <= m77952) {
                i3 = m7795;
                i2 = m77952;
                fVar3 = this;
                fVar2 = fVar;
            } else {
                int i9 = f9332 + 5;
                f9323 = i9 % 128;
                if (i9 % 2 != 0) {
                    Object obj = null;
                    super.hashCode();
                }
                i2 = m7795;
                i3 = m77952;
                fVar2 = this;
                fVar3 = fVar;
            }
            int i10 = (i3 + 63) >>> 6;
            int i11 = (i2 + 63) >>> 6;
            int i12 = ((i3 + i2) + 62) >>> 6;
            if (i10 == 1) {
                long j = fVar3.f9333[0];
                if ((j == 1 ? 'G' : 'Q') != 'Q') {
                    return fVar2;
                }
                long[] jArr = new long[i12];
                m7770(j, fVar2.f9333, i11, jArr, 0);
                return m7785(jArr, 0, i12, i, iArr);
            }
            int i13 = ((i2 + 7) + 63) >>> 6;
            int[] iArr2 = new int[16];
            int i14 = i13 << 4;
            long[] jArr2 = new long[i14];
            iArr2[1] = i13;
            System.arraycopy(fVar2.f9333, 0, jArr2, i13, i11);
            int i15 = i13;
            int i16 = 2;
            for (int i17 = 16; i16 < i17; i17 = 16) {
                i15 += i13;
                iArr2[i16] = i15;
                if (((i16 & 1) == 0 ? 'V' : '+') != 'V') {
                    m7782(jArr2, i13, jArr2, i15 - i13, jArr2, i15, i13);
                } else {
                    m7769(jArr2, i15 >>> 1, jArr2, i15, i13, 1);
                }
                i16++;
            }
            long[] jArr3 = new long[i14];
            m7769(jArr2, 0, jArr3, 0, i14, 4);
            long[] jArr4 = fVar3.f9333;
            int i18 = i12 << 3;
            long[] jArr5 = new long[i18];
            int i19 = 0;
            while (i19 < i10) {
                long j2 = jArr4[i19];
                int i20 = f9332 + 61;
                f9323 = i20 % 128;
                int i21 = i20 % i5;
                int i22 = i19;
                long j3 = j2;
                while (true) {
                    long j4 = j3 >>> 4;
                    m7788(jArr5, i22, jArr2, iArr2[((int) j3) & 15], jArr3, iArr2[((int) j4) & 15], i13);
                    j3 = j4 >>> 4;
                    if (j3 == 0) {
                        break;
                    }
                    i22 += i12;
                }
                i19++;
                i5 = 2;
            }
            while (true) {
                i18 -= i12;
                if (i18 != 0) {
                    int i23 = f9323 + 1;
                    f9332 = i23 % 128;
                    if (i23 % 2 == 0) {
                        m7766(jArr5, i18 + i12, jArr5, i18, i12, 36);
                    } else {
                        m7766(jArr5, i18 - i12, jArr5, i18, i12, 8);
                    }
                } else {
                    return m7785(jArr5, 0, i12, i, iArr);
                }
            }
        } else {
            int i24 = f9323 + 65;
            f9332 = i24 % 128;
            int i25 = i24 % 2;
            return this;
        }
    }

    /* renamed from: ˏ  reason: contains not printable characters */
    private static long m7780(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = f9332 + 41;
        f9323 = i5 % 128;
        long j = 0;
        int i6 = i5 % 2 != 0 ? 100 / i4 : 64 - i4;
        while (true) {
            i3--;
            if (!(i3 >= 0)) {
                break;
            }
            long j2 = jArr2[i2 + i3];
            int i7 = i + i3;
            jArr[i7] = (j | (j2 >>> i4)) ^ jArr[i7];
            j = j2 << i6;
        }
        int i8 = f9323 + 121;
        f9332 = i8 % 128;
        if (i8 % 2 == 0) {
            Object obj = null;
            super.hashCode();
            return j;
        }
        return j;
    }

    /* renamed from: ˎ  reason: contains not printable characters */
    private static void m7778(long[] jArr, int i, int i2, int[] iArr) {
        int i3 = f9332 + 39;
        f9323 = i3 % 128;
        int i4 = i3 % 2;
        int i5 = i << 1;
        while (true) {
            i--;
            if (!(i >= 0)) {
                return;
            }
            long j = jArr[i];
            int i6 = i5 - 1;
            jArr[i6] = m7765((int) (j >>> 32));
            i5 = i6 - 1;
            jArr[i5] = m7765((int) j);
            int i7 = f9332 + 55;
            f9323 = i7 % 128;
            int i8 = i7 % 2;
        }
    }

    /* renamed from: ˏ  reason: contains not printable characters */
    private static void m7782(long[] jArr, int i, long[] jArr2, int i2, long[] jArr3, int i3, int i4) {
        int i5 = f9332 + 13;
        f9323 = i5 % 128;
        int i6 = i5 % 2;
        int i7 = 0;
        while (true) {
            if (!(i7 < i4)) {
                return;
            }
            int i8 = f9332 + 35;
            f9323 = i8 % 128;
            int i9 = i8 % 2;
            jArr3[i3 + i7] = jArr[i + i7] ^ jArr2[i2 + i7];
            i7++;
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:11:0x0027, code lost:
        if (r17 < r1) goto L47;
     */
    /* JADX WARN: Code restructure failed: missing block: B:12:0x0029, code lost:
        return r17;
     */
    /* JADX WARN: Code restructure failed: missing block: B:13:0x002a, code lost:
        r11 = r1;
        r1 = r17 << 6;
        r4 = java.lang.Math.min(r1, (r18 << 1) - 1);
        r1 = r1 - r4;
        r12 = r17;
     */
    /* JADX WARN: Code restructure failed: missing block: B:15:0x0038, code lost:
        if (r1 < 64) goto L22;
     */
    /* JADX WARN: Code restructure failed: missing block: B:16:0x003a, code lost:
        r0 = util.a.y.fd.f.f9323 + 65;
        util.a.y.fd.f.f9332 = r0 % 128;
     */
    /* JADX WARN: Code restructure failed: missing block: B:17:0x0044, code lost:
        if ((r0 % 2) != 0) goto L21;
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:0x0046, code lost:
        r0 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:19:0x0048, code lost:
        r0 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x0049, code lost:
        if (r0 == true) goto L14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x004b, code lost:
        r12 = r12 + 22;
        r1 = r1 + 60;
     */
    /* JADX WARN: Code restructure failed: missing block: B:22:0x0050, code lost:
        r12 = r12 - 1;
        r1 = r1 - 64;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x0055, code lost:
        r5 = r19.length;
        r13 = r19[r5 - 1];
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x005a, code lost:
        if (r5 <= 1) goto L46;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x005c, code lost:
        r14 = 6;
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x005e, code lost:
        r14 = '\f';
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x0060, code lost:
        if (r14 == 6) goto L27;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x0063, code lost:
        r2 = r19[r5 - 2];
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x0067, code lost:
        r13 = java.lang.Math.max(r18, r13 + 64);
        r0 = (r1 + java.lang.Math.min(r4 - r13, r18 - r2)) >> 6;
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x0079, code lost:
        if (r0 <= 1) goto L45;
     */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x007b, code lost:
        r2 = 'B';
     */
    /* JADX WARN: Code restructure failed: missing block: B:33:0x007e, code lost:
        r2 = ',';
     */
    /* JADX WARN: Code restructure failed: missing block: B:34:0x0080, code lost:
        if (r2 == 'B') goto L40;
     */
    /* JADX WARN: Code restructure failed: missing block: B:35:0x0082, code lost:
        r2 = r12;
     */
    /* JADX WARN: Code restructure failed: missing block: B:36:0x0084, code lost:
        r14 = r12 - r0;
        m7776(r15, r16, r12, r14, r18, r19);
     */
    /* JADX WARN: Code restructure failed: missing block: B:37:0x0092, code lost:
        if (r12 <= r14) goto L43;
     */
    /* JADX WARN: Code restructure failed: missing block: B:38:0x0094, code lost:
        r12 = r12 - 1;
        r15[r16 + r12] = 0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:39:0x009d, code lost:
        r4 = r14 << 6;
     */
    /* JADX WARN: Code restructure failed: missing block: B:40:0x00a0, code lost:
        if (r4 <= r13) goto L39;
     */
    /* JADX WARN: Code restructure failed: missing block: B:41:0x00a2, code lost:
        m7772(r15, r16, r2, r13, r18, r19);
     */
    /* JADX WARN: Code restructure failed: missing block: B:42:0x00ae, code lost:
        r13 = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:43:0x00af, code lost:
        if (r13 <= r18) goto L37;
     */
    /* JADX WARN: Code restructure failed: missing block: B:44:0x00b1, code lost:
        r0 = util.a.y.fd.f.f9323 + 37;
        util.a.y.fd.f.f9332 = r0 % 128;
        r0 = r0 % 2;
        m7773(r15, r16, r13, r18, r19);
     */
    /* JADX WARN: Code restructure failed: missing block: B:45:0x00be, code lost:
        return r11;
     */
    /* JADX WARN: Code restructure failed: missing block: B:8:0x0021, code lost:
        if ((r17 < r1) != false) goto L47;
     */
    /* renamed from: ˏ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    private static int m7779(long[] r15, int r16, int r17, int r18, int[] r19) {
        /*
            Method dump skipped, instructions count: 191
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7779(long[], int, int, int, int[]):int");
    }

    /* renamed from: ˎ  reason: contains not printable characters */
    public f m7800(int i, int[] iArr) {
        int m7795 = m7795();
        if (m7795 == 0) {
            throw new IllegalStateException();
        }
        int i2 = 1;
        if ((m7795 == 1 ? (char) 26 : 'S') != 26) {
            int i3 = (i + 63) >>> 6;
            f fVar = new f(i3);
            m7777(fVar.f9333, 0, i, i, iArr);
            f fVar2 = new f(i3);
            fVar2.f9333[0] = 1;
            f fVar3 = new f(i3);
            int[] iArr2 = new int[2];
            iArr2[0] = m7795;
            iArr2[1] = i + 1;
            f[] fVarArr = {(f) clone(), fVar};
            int[] iArr3 = {1, 0};
            f[] fVarArr2 = {fVar2, fVar3};
            int i4 = iArr2[1];
            int i5 = iArr3[1];
            int i6 = i4 - iArr2[0];
            while (true) {
                if (i6 < 0) {
                    int i7 = f9323 + 25;
                    f9332 = i7 % 128;
                    int i8 = i7 % 2;
                    i6 = -i6;
                    iArr2[i2] = i4;
                    iArr3[i2] = i5;
                    int i9 = 1 - i2;
                    int i10 = iArr2[i9];
                    i5 = iArr3[i9];
                    i2 = i9;
                    i4 = i10;
                }
                int i11 = 1 - i2;
                fVarArr[i2].m7771(fVarArr[i11], iArr2[i11], i6);
                int m7783 = fVarArr[i2].m7783(i4);
                if ((m7783 == 0 ? 'U' : '\b') != 'U') {
                    int i12 = iArr3[i11];
                    fVarArr2[i2].m7771(fVarArr2[i11], i12, i6);
                    int i13 = i12 + i6;
                    if (i13 > i5) {
                        i5 = i13;
                    } else {
                        if ((i13 == i5 ? (char) 27 : ']') != ']') {
                            int i14 = f9332 + 9;
                            f9323 = i14 % 128;
                            int i15 = i14 % 2;
                            i5 = fVarArr2[i2].m7783(i5);
                        }
                    }
                    i6 += m7783 - i4;
                    i4 = m7783;
                } else {
                    return fVarArr2[i11];
                }
            }
        } else {
            int i16 = f9332 + 17;
            f9323 = i16 % 128;
            int i17 = i16 % 2;
            return this;
        }
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    private static void m7770(long j, long[] jArr, int i, long[] jArr2, int i2) {
        if ((j & 1) != 0) {
            m7767(jArr2, i2, jArr, 0, i);
            int i3 = f9332 + 113;
            f9323 = i3 % 128;
            int i4 = i3 % 2;
        }
        int i5 = 1;
        long j2 = j;
        while (true) {
            long j3 = j2 >>> 1;
            if ((j3 != 0 ? 'D' : (char) 21) == 21) {
                break;
            }
            if ((j3 & 1) != 0) {
                long m7766 = m7766(jArr2, i2, jArr, 0, i, i5);
                if (m7766 != 0) {
                    int i6 = i2 + i;
                    jArr2[i6] = m7766 ^ jArr2[i6];
                }
            }
            i5++;
            j2 = j3;
        }
        int i7 = f9323 + 43;
        f9332 = i7 % 128;
        if (!(i7 % 2 == 0)) {
            return;
        }
        Object obj = null;
        super.hashCode();
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    public f m7797(f fVar, int i, int[] iArr) {
        int i2;
        int i3;
        f fVar2;
        f fVar3;
        int m7795 = m7795();
        int i4 = 0;
        if (!(m7795 != 0)) {
            int i5 = f9332 + 33;
            f9323 = i5 % 128;
            int i6 = i5 % 2;
            return this;
        }
        int m77952 = fVar.m7795();
        if (m77952 == 0) {
            return fVar;
        }
        if (m7795 > m77952) {
            i3 = m7795;
            i2 = m77952;
            fVar3 = this;
            fVar2 = fVar;
        } else {
            i2 = m7795;
            i3 = m77952;
            fVar2 = this;
            fVar3 = fVar;
        }
        int i7 = (i2 + 63) >>> 6;
        int i8 = (i3 + 63) >>> 6;
        int i9 = ((i2 + i3) + 62) >>> 6;
        if (i7 == 1) {
            long j = fVar2.f9333[0];
            if (j == 1) {
                int i10 = f9332 + 17;
                f9323 = i10 % 128;
                int i11 = i10 % 2;
                return fVar3;
            }
            long[] jArr = new long[i9];
            m7770(j, fVar3.f9333, i8, jArr, 0);
            return new f(jArr, 0, i9);
        }
        int i12 = ((i3 + 7) + 63) >>> 6;
        int[] iArr2 = new int[16];
        int i13 = i12 << 4;
        long[] jArr2 = new long[i13];
        iArr2[1] = i12;
        System.arraycopy(fVar3.f9333, 0, jArr2, i12, i8);
        int i14 = i12;
        for (int i15 = 2; i15 < 16; i15++) {
            i14 += i12;
            iArr2[i15] = i14;
            if ((i15 & 1) == 0) {
                m7769(jArr2, i14 >>> 1, jArr2, i14, i12, 1);
                int i16 = f9323 + 109;
                f9332 = i16 % 128;
                int i17 = i16 % 2;
            } else {
                m7782(jArr2, i12, jArr2, i14 - i12, jArr2, i14, i12);
            }
        }
        long[] jArr3 = new long[i13];
        m7769(jArr2, 0, jArr3, 0, i13, 4);
        long[] jArr4 = fVar2.f9333;
        int i18 = i9 << 3;
        long[] jArr5 = new long[i18];
        int i19 = 0;
        while (true) {
            if (!(i19 < i7)) {
                break;
            }
            long j2 = jArr4[i19];
            int i20 = i19;
            while (true) {
                long j3 = j2 >>> 4;
                m7788(jArr5, i20, jArr2, iArr2[((int) j2) & 15], jArr3, iArr2[((int) j3) & 15], i12);
                j2 = j3 >>> 4;
                if (j2 == 0) {
                    break;
                }
                i20 += i9;
                int i21 = f9323 + 45;
                f9332 = i21 % 128;
                int i22 = i21 % 2;
            }
            int i23 = f9323 + 75;
            f9332 = i23 % 128;
            i19 = i23 % 2 == 0 ? i19 + 90 : i19 + 1;
            i4 = 0;
        }
        while (true) {
            i18 -= i9;
            if (i18 != 0) {
                m7766(jArr5, i18 - i9, jArr5, i18, i9, 8);
            } else {
                return new f(jArr5, i4, i9);
            }
        }
    }

    /* renamed from: ˏ  reason: contains not printable characters */
    private static void m7781(long[] jArr, int i, int i2, long j, int i3, int[] iArr) {
        int i4 = f9323 + 39;
        int i5 = i4 % 128;
        f9332 = i5;
        int i6 = i4 % 2;
        int i7 = i2 - i3;
        int length = iArr.length;
        int i8 = i5 + 107;
        f9323 = i8 % 128;
        int i9 = i8 % 2;
        while (true) {
            length--;
            if ((length >= 0 ? '\f' : '/') != '\f') {
                m7786(jArr, i, i7, j);
                return;
            }
            int i10 = f9332 + 85;
            f9323 = i10 % 128;
            m7786(jArr, i, i10 % 2 != 0 ? i7 << iArr[length] : iArr[length] + i7, j);
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:16:0x0027, code lost:
        if ((r0 == 0) != false) goto L15;
     */
    /* JADX WARN: Code restructure failed: missing block: B:17:0x0029, code lost:
        r10 = util.a.y.fd.f.f9332 + 103;
        util.a.y.fd.f.f9323 = r10 % 128;
     */
    /* JADX WARN: Code restructure failed: missing block: B:18:0x0035, code lost:
        if ((r10 % 2) == 0) goto L25;
     */
    /* JADX WARN: Code restructure failed: missing block: B:19:0x0037, code lost:
        r10 = '\b';
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x003a, code lost:
        r10 = 'G';
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x003c, code lost:
        if (r10 == '\b') goto L20;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x003f, code lost:
        r10 = r3.length;
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x0040, code lost:
        return r9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x0043, code lost:
        r0 = r0 << 1;
        r2 = new long[r0];
        r3 = 0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:28:0x0047, code lost:
        if (r3 >= r0) goto L11;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x0049, code lost:
        r5 = r9.f9333[r3 >>> 1];
        r4 = r3 + 1;
        r2[r3] = m7765((int) r5);
        r3 = r4 + 1;
        r2[r4] = m7765((int) (r5 >>> 32));
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x006e, code lost:
        return new util.a.y.fd.f(r2, 0, m7779(r2, 0, r0, r10, r11));
     */
    /* JADX WARN: Code restructure failed: missing block: B:9:0x0018, code lost:
        if (r0 == 0) goto L15;
     */
    /* renamed from: ˏ  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public util.a.y.fd.f m7804(int r10, int[] r11) {
        /*
            r9 = this;
            int r0 = util.a.y.fd.f.f9332
            int r0 = r0 + 47
            int r1 = r0 % 128
            util.a.y.fd.f.f9323 = r1
            int r0 = r0 % 2
            r1 = 0
            r2 = 1
            if (r0 == 0) goto L10
            r0 = 0
            goto L11
        L10:
            r0 = 1
        L11:
            r3 = 0
            if (r0 == 0) goto L1b
            int r0 = r9.m7793()
            if (r0 != 0) goto L43
            goto L29
        L1b:
            int r0 = r9.m7793()
            super.hashCode()     // Catch: java.lang.Throwable -> L6f
            if (r0 != 0) goto L26
            r4 = 1
            goto L27
        L26:
            r4 = 0
        L27:
            if (r4 == 0) goto L43
        L29:
            int r10 = util.a.y.fd.f.f9332
            int r10 = r10 + 103
            int r11 = r10 % 128
            util.a.y.fd.f.f9323 = r11
            int r10 = r10 % 2
            r11 = 8
            if (r10 == 0) goto L3a
            r10 = 8
            goto L3c
        L3a:
            r10 = 71
        L3c:
            if (r10 == r11) goto L3f
            goto L40
        L3f:
            int r10 = r3.length     // Catch: java.lang.Throwable -> L41
        L40:
            return r9
        L41:
            r10 = move-exception
            throw r10
        L43:
            int r0 = r0 << r2
            long[] r2 = new long[r0]
            r3 = 0
        L47:
            if (r3 >= r0) goto L65
            long[] r4 = r9.f9333
            int r5 = r3 >>> 1
            r5 = r4[r5]
            int r4 = r3 + 1
            int r7 = (int) r5
            long r7 = m7765(r7)
            r2[r3] = r7
            int r3 = r4 + 1
            r7 = 32
            long r5 = r5 >>> r7
            int r6 = (int) r5
            long r5 = m7765(r6)
            r2[r4] = r5
            goto L47
        L65:
            util.a.y.fd.f r3 = new util.a.y.fd.f
            int r10 = m7779(r2, r1, r0, r10, r11)
            r3.<init>(r2, r1, r10)
            return r3
        L6f:
            r10 = move-exception
            throw r10
        */
        throw new UnsupportedOperationException("Method not decompiled: util.a.y.fd.f.m7804(int, int[]):util.a.y.fd.f");
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    private static f m7785(long[] jArr, int i, int i2, int i3, int[] iArr) {
        f fVar = new f(jArr, i, m7779(jArr, i, i2, i3, iArr));
        int i4 = f9332 + 43;
        f9323 = i4 % 128;
        if (!(i4 % 2 != 0)) {
            return fVar;
        }
        Object[] objArr = null;
        int length = objArr.length;
        return fVar;
    }

    /* renamed from: ॱ  reason: contains not printable characters */
    private static void m7787(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = f9323 + 115;
        f9332 = i5 % 128;
        int i6 = i5 % 2;
        int i7 = i + (i4 >>> 6);
        int i8 = i4 & 63;
        if (i8 != 0) {
            jArr[i7] = m7780(jArr, i7 + 1, jArr2, i2, i3, 64 - i8) ^ jArr[i7];
            return;
        }
        m7767(jArr, i7, jArr2, i2, i3);
        int i9 = f9332 + 75;
        f9323 = i9 % 128;
        int i10 = i9 % 2;
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    private static void m7773(long[] jArr, int i, int i2, int i3, int[] iArr) {
        while (true) {
            i2--;
            if ((i2 >= i3 ? 'N' : (char) 7) != 'N') {
                return;
            }
            if (m7789(jArr, i, i2)) {
                int i4 = f9332 + 77;
                f9323 = i4 % 128;
                boolean z = i4 % 2 != 0;
                m7777(jArr, i, i2, i3, iArr);
                if (z) {
                    Object[] objArr = null;
                    int length = objArr.length;
                }
                int i5 = f9323 + 67;
                f9332 = i5 % 128;
                int i6 = i5 % 2;
            }
        }
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    private static void m7772(long[] jArr, int i, int i2, int i3, int i4, int[] iArr) {
        int i5 = i3 >>> 6;
        int i6 = i2;
        while (true) {
            int i7 = i6 - 1;
            if (i7 <= i5) {
                break;
            }
            int i8 = i + i7;
            long j = jArr[i8];
            if (!(j == 0)) {
                int i9 = f9332 + 105;
                f9323 = i9 % 128;
                int i10 = i9 % 2;
                jArr[i8] = 0;
                m7781(jArr, i, i7 << 6, j, i4, iArr);
            }
            int i11 = f9332 + 103;
            f9323 = i11 % 128;
            int i12 = i11 % 2;
            i6 = i7;
        }
        int i13 = i3 & 63;
        int i14 = i + i5;
        long j2 = jArr[i14] >>> i13;
        if ((j2 != 0 ? 'F' : 'I') != 'I') {
            int i15 = f9323 + 31;
            f9332 = i15 % 128;
            int i16 = i15 % 2;
            jArr[i14] = jArr[i14] ^ (j2 << i13);
            m7781(jArr, i, i3, j2, i4, iArr);
        }
    }

    /* renamed from: ˋ  reason: contains not printable characters */
    public f m7796(int i, int[] iArr) {
        int i2 = f9332 + 57;
        f9323 = i2 % 128;
        int i3 = i2 % 2;
        int m7793 = m7793();
        if (m7793 == 0) {
            int i4 = f9332 + 69;
            f9323 = i4 % 128;
            if (i4 % 2 != 0) {
                Object obj = null;
                super.hashCode();
                return this;
            }
            return this;
        }
        int i5 = m7793 << 1;
        long[] jArr = new long[i5];
        int i6 = 0;
        while (true) {
            if (!(i6 < i5)) {
                return new f(jArr, 0, i5);
            }
            long j = this.f9333[i6 >>> 1];
            int i7 = i6 + 1;
            jArr[i6] = m7765((int) j);
            i6 = i7 + 1;
            jArr[i7] = m7765((int) (j >>> 32));
            int i8 = f9323 + 103;
            f9332 = i8 % 128;
            int i9 = i8 % 2;
        }
    }
}
